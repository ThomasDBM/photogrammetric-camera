{"version":3,"sources":["webpack://PhotogrammetricCamera/webpack/universalModuleDefinition","webpack://PhotogrammetricCamera/webpack/bootstrap","webpack://PhotogrammetricCamera/external \"THREE\"","webpack://PhotogrammetricCamera/./src/materials/shaders/OrientedImageMaterialVS.glsl","webpack://PhotogrammetricCamera/./src/materials/shaders/OrientedImageMaterialFS.glsl","webpack://PhotogrammetricCamera/./src/materials/shaders/NewMaterialVS.glsl","webpack://PhotogrammetricCamera/./src/materials/shaders/NewMaterialFS.glsl","webpack://PhotogrammetricCamera/./src/materials/shaders/ShadowMapMaterialVS.glsl","webpack://PhotogrammetricCamera/./src/materials/shaders/ShadowMapMaterialFS.glsl","webpack://PhotogrammetricCamera/./src/materials/shaders/SpriteMaterialVS.glsl","webpack://PhotogrammetricCamera/./src/materials/shaders/SpriteMaterialFS.glsl","webpack://PhotogrammetricCamera/./src/postprocessing/Radial.glsl","webpack://PhotogrammetricCamera/./src/postprocessing/RawShaderPassVS.glsl","webpack://PhotogrammetricCamera/./src/cameras/PhotogrammetricCamera.js","webpack://PhotogrammetricCamera/./src/cameras/PhotogrammetricDistortion.js","webpack://PhotogrammetricCamera/./src/cameras/distortions/RadialDistortion.js","webpack://PhotogrammetricCamera/./src/parsers/BundlerParser.js","webpack://PhotogrammetricCamera/./src/parsers/GeoJSONParser.js","webpack://PhotogrammetricCamera/./src/parsers/MatisParser.js","webpack://PhotogrammetricCamera/./src/cameras/distortions/BrownDistortion.js","webpack://PhotogrammetricCamera/./src/cameras/distortions/FishEyeDistortion.js","webpack://PhotogrammetricCamera/./src/cameras/distortions/FraserDistortion.js","webpack://PhotogrammetricCamera/./src/cameras/distortions/PolynomDistortion.js","webpack://PhotogrammetricCamera/./src/parsers/MicmacParser.js","webpack://PhotogrammetricCamera/./src/parsers/OPKParser.js","webpack://PhotogrammetricCamera/./src/serializers/GeoJSONSerializer.js","webpack://PhotogrammetricCamera/./src/serializers/GMLSerializer.js","webpack://PhotogrammetricCamera/./node_modules/three/examples/jsm/controls/OrbitControls.js","webpack://PhotogrammetricCamera/./node_modules/three/examples/jsm/controls/FirstPersonControls.js","webpack://PhotogrammetricCamera/./node_modules/three/examples/jsm/loaders/PLYLoader.js","webpack://PhotogrammetricCamera/./node_modules/three/examples/jsm/shaders/CopyShader.js","webpack://PhotogrammetricCamera/./node_modules/three/examples/jsm/postprocessing/Pass.js","webpack://PhotogrammetricCamera/./node_modules/three/examples/jsm/postprocessing/ShaderPass.js","webpack://PhotogrammetricCamera/./node_modules/three/examples/jsm/postprocessing/MaskPass.js","webpack://PhotogrammetricCamera/./node_modules/three/examples/jsm/postprocessing/EffectComposer.js","webpack://PhotogrammetricCamera/./node_modules/three/examples/jsm/postprocessing/RenderPass.js","webpack://PhotogrammetricCamera/./node_modules/three/examples/jsm/WEBGL.js","webpack://PhotogrammetricCamera/./src/sources/FilesSource.js","webpack://PhotogrammetricCamera/./src/sources/FetchSource.js","webpack://PhotogrammetricCamera/./src/materials/Material.js","webpack://PhotogrammetricCamera/./src/materials/OrientedImageMaterial.js","webpack://PhotogrammetricCamera/./src/materials/NewMaterial.js","webpack://PhotogrammetricCamera/./src/materials/ShadowMapMaterial.js","webpack://PhotogrammetricCamera/./src/materials/SpriteMaterial.js","webpack://PhotogrammetricCamera/./src/postprocessing/RadialShader.js","webpack://PhotogrammetricCamera/./src/postprocessing/RadialBlurShader.js","webpack://PhotogrammetricCamera/./src/postprocessing/SumShader.js","webpack://PhotogrammetricCamera/./src/postprocessing/RawShaderPass.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ndcMatrix","set","lerp","te","this","elements","me","focal","size","point","skew","distos","near","far","aspect","imageMatrix","mask","Array","isArray","fromArray","isVector2","clone","multiplyScalar","super","undefined","x","y","Math","atan2","view","fullHeight","PI","fov","tan","isPhotogrammetricCamera","zoom","enabled","offsetX","offsetY","width","height","fullWidth","filmOffset","preProjectionMatrix","postProjectionMatrix","textureMatrix","copy","identity","updateProjectionMatrix","makeScale","multiply","textureAspect","sx","sy","ox","oy","premultiply","aspectRatio","projectionMatrix","multiplyMatrices","applyMatrix4","matrixWorldInverse","reduce","q","disto","project","distort","source","recursive","getFilmHeight","focalLength","camera","position","quaternion","slerp","slice","assign","polynom","res","length","polynomVector3","z","cardan_cubic_roots","a","b","delta","x0","sqr_delta_2a","sqrt","quadratic_roots","vt","a2","b2","cubic_root","p3_4_27","del","sqrt_del","z0","x12","kos","acos","cos","sgn","pow","abs","C","R","R2max","console","warn","roots","imax","Infinity","r2max","isRadialDistortion","r2","radial","PhotogrammetricDistortion","texts","list","parseList","parseOut","text","lines","split","map","trim","names","sizes","Number","startsWith","num_cameras","num_points","cameras","f","k1","k2","R1","R2","R3","center","f2","cam","matrix","negate","setPosition","setFromRotationMatrix","updateMatrixWorld","push","check","epsilon","N","points","ok","pp","p3","p2","distanceTo","id","Float32Array","colors","Uint8Array","xyz","rgb","viewlist","num_views","v","add","format","extensions","mimetypes","fetchtype","parseFeature","feature","coord","geometry","coordinates","prop","properties","epsgquaternion","fx","fy","px","py","cx","cy","c3","c5","c7","cm","THREE","Matrix4","m00","m01","m10","m11","m20","m21","Vector3","Quaternion","qx","qy","qz","qw","userData","parse","geojson","JSON","features","e","getText","xml","tagName","node","getElementsByTagName","childNodes","nodeValue","getNumber","getNumbers","dims","dim","parseIntrinsics","spheric","lambdaphi","parseSpheric","sensor","parseConic","Error","Node","DOMParser","parseFromString","children","mat3d","M","L1","L2","L3","quat","makeRotationFromQuaternion","transpose","scale","parseExtrinsics","decompose","F","P","isBrownDistortion","x2","y2","xy","xy2","yx2","x2y2","equisolid","isFishEyeDistortion","A","B","theta","atan","sin","lambda","rk","k","K","X","j","isFraserDistortion","S","degree","ceil","fill","firstZero","reverse","findIndex","isPolynomDistortion","parseText","parseNumbers","filter","String","parseVector2","parseVector3","parseChildNumbers","from","parseDistortion","params","states","type","Ebner","substr","concat","parseConv","KnownConv","grade","lin","Cardan","Video","DistC2M","MatrC2M","col","order","parseOrientation","intrinsics","rmax","PhotogrammetricCamera","Y","parseOrIntImaM2C","conv","rotation","encoding","E","makeRotationFromEuler","parseCheck","match","file","TypeProj","error","Promise","reject","open","then","resolve","header","projection","alti","angleInDegrees","euler","data","image","degToRad","setFromEuler","filename","multi","Uint16Array","strip","serializeFeature","crsName","w","crs","stringify","serialize","pos","_changeEvent","_startEvent","_endEvent","domElement","document","target","minDistance","maxDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","reset","dispatchEvent","update","state","STATE","NONE","offset","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","addScaledVector","panOffset","setFromSpherical","lookAt","zoomChanged","distanceToSquared","EPS","dot","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","angle","rotateUp","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","clientHeight","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","handleMouseWheel","needsUpdate","code","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","passive","_lookDirection","_spherical","_target","movementSpeed","lookSpeed","lookVertical","autoForward","activeLook","heightSpeed","heightCoef","heightMin","heightMax","constrainVertical","verticalMin","verticalMax","mouseDragOn","autoSpeedFactor","mouseX","mouseY","moveForward","moveBackward","moveLeft","moveRight","viewHalfX","viewHalfY","lat","lon","handleResize","innerWidth","innerHeight","offsetWidth","offsetHeight","offsetLeft","offsetTop","moveUp","moveDown","onKeyUp","isVector3","setOrientation","targetPosition","heightDelta","clamp","actualMoveSpeed","translateZ","translateX","translateY","actualLookSpeed","verticalLookRatio","mapLinear","setFromSphericalCoords","contextmenu","_onMouseDown","_onMouseMove","_onMouseUp","_onKeyDown","_onKeyUp","controls","radToDeg","manager","propertyNameMapping","url","onLoad","onProgress","onError","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","itemError","mapping","parseHeader","headerText","headerLength","result","exec","Blob","comments","objInfo","currentElement","make_ply_element_property","propertValues","countType","itemType","line","lineValues","lineType","shift","join","version","count","parseInt","log","parseASCIINumber","parseFloat","parseASCIIElement","values","parseASCII","buffer","indices","vertices","normals","uvs","faceVertexUvs","body","currentElementCount","handleElement","postProcess","setIndex","setAttribute","toNonIndexed","computeBoundingSphere","elementName","nx","ny","nz","red","green","blue","vertex_indices","vertex_index","texcoord","binaryRead","dataview","at","little_endian","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","binaryReadElement","read","ArrayBuffer","decodeText","DataView","loc","parseBinary","CopyShader","uniforms","vertexShader","fragmentShader","Pass","needsSwap","clear","renderToScreen","_camera","_geometry","material","_mesh","renderer","render","shader","textureID","defines","fsQuad","writeBuffer","readBuffer","texture","setRenderTarget","autoClearColor","autoClearDepth","autoClearStencil","scene","inverse","context","getContext","writeValue","clearValue","buffers","color","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","EQUAL","KEEP","renderTarget","parameters","minFilter","magFilter","getSize","_pixelRatio","getPixelRatio","_width","_height","renderTarget1","renderTarget2","passes","copyPass","clock","tmp","pass","setSize","index","splice","indexOf","passIndex","deltaTime","getDelta","currentRenderTarget","getRenderTarget","maskActive","il","isLastEnabledPass","NOTEQUAL","swapBuffers","effectiveWidth","effectiveHeight","pixelRatio","overrideMaterial","clearColor","clearAlpha","clearDepth","_oldClearColor","oldAutoClear","autoClear","oldClearAlpha","oldOverrideMaterial","getClearColor","getClearAlpha","setClearColor","WEBGL","canvas","createElement","WebGLRenderingContext","WebGL2RenderingContext","getErrorMessage","contexts","1","2","message","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","margin","replace","innerHTML","decode","fr","FileReader","onload","onerror","abort","DOMException","readAsText","readAsArrayBuffer","readAsDataURL","files","options","lastIndexOf","fetch","URL","webkitURL","response","status","arrayBuffer","blob","createObjectURL","fetchOptions","crossOrigin","revokeObjectURL","pop","defaultValue","definePropertyUniform","uniformsNeedUpdate","diffuse","uvwPosition","uvwPreTransform","uvwPostTransform","uvDistortion","alphaMap","borderSharpness","diffuseColorGrey","debugOpacity","USE_MAP4","USE_ALPHAMAP","vertexColors","USE_COLOR","logarithmicDepthBuffer","USE_LOGDEPTHBUF","USE_SIZEATTENUATION","opacity","getWorldPosition","Vector2","Vector4","textureCameraPosition","textureCameraPreTransform","textureCameraPostTransform","depthMap","USE_PROJECTIVE_TEXTURING","EPSILON","screenSize","elsPre","M_prime_Pre","elsPost","M_prime_Post","E_prime","applyMatrix3","viewProjectionTransformMat4","els","viewProjectionScreenInverse","screenInverse","RadialShader","RadialBlurShader","SumShader"],"mappings":"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","file":"photogrammetric-camera.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"THREE\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"THREE\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PhotogrammetricCamera\"] = factory(require(\"THREE\"));\n\telse\n\t\troot[\"PhotogrammetricCamera\"] = factory(root[\"THREE\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"D:\\\\mbredif\\\\dev\\\\git\\\\github\\\\itownsResearch\\\\photogrammetric-camera\\\\dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = \"uniform float size;\\r\\nuniform float scale;\\r\\n#include <common>\\r\\n\\r\\n#ifdef USE_MAP4\\r\\nuniform vec3 uvwPosition;\\r\\nuniform mat4 uvwPreTransform;\\r\\nvarying highp vec4 vPosition;\\r\\n#undef USE_MAP\\r\\n#endif\\r\\n\\r\\n#include <color_pars_vertex>\\r\\n#include <fog_pars_vertex>\\r\\n#include <morphtarget_pars_vertex>\\r\\n#include <logdepthbuf_pars_vertex>\\r\\n#include <clipping_planes_pars_vertex>\\r\\nvoid main() {\\r\\n  #include <color_vertex>\\r\\n  #include <begin_vertex>\\r\\n  #include <morphtarget_vertex>\\r\\n  #include <project_vertex>\\r\\n  gl_PointSize = size;\\r\\n  #ifdef USE_SIZEATTENUATION\\r\\n    bool isPerspective = isPerspectiveMatrix( projectionMatrix );\\r\\n    if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\r\\n  #endif\\r\\n  #include <logdepthbuf_vertex>\\r\\n  #include <clipping_planes_vertex>\\r\\n  #include <worldpos_vertex>\\r\\n\\r\\n  #ifdef USE_MAP4\\r\\n    // \\\"uvwPreTransform * m\\\" is equal to \\\"camera.preProjectionMatrix * camera.matrixWorldInverse * modelMatrix\\\"\\r\\n    // but more stable when both the texturing and viewing cameras have large coordinate values\\r\\n    mat4 m = modelMatrix;\\r\\n    m[3].xyz -= uvwPosition;\\r\\n    vec4 uvw = uvwPreTransform * m * vec4(transformed, 1.);\\r\\n    vPosition = uvw;\\r\\n  #endif\\r\\n\\r\\n  #include <fog_vertex>\\r\\n}\\r\\n\"","module.exports = \"uniform vec3 diffuse;\\r\\nuniform float opacity;\\r\\n#include <common>\\r\\n\\r\\nuniform bool diffuseColorGrey;\\r\\n#ifdef USE_MAP4\\r\\n#include <distortions/radial_pars_fragment>\\r\\nuniform mat4 uvwPostTransform;\\r\\nuniform RadialDistortion uvDistortion;\\r\\nuniform sampler2D map;\\r\\nuniform float borderSharpness;\\r\\nuniform float debugOpacity;\\r\\n\\r\\nvarying highp vec4 vPosition;\\r\\n#undef USE_MAP\\r\\n#endif\\r\\n\\r\\n#include <color_pars_fragment>\\r\\n#include <map_particle_pars_fragment>\\r\\n#include <fog_pars_fragment>\\r\\n#include <logdepthbuf_pars_fragment>\\r\\n#include <clipping_planes_pars_fragment>\\r\\n\\r\\nvoid main() {\\r\\n  #include <clipping_planes_fragment>\\r\\n  vec3 outgoingLight = vec3( 0.0 );\\r\\n  vec4 diffuseColor = vec4( diffuse, opacity );\\r\\n  #include <logdepthbuf_fragment>\\r\\n  #include <map_particle_fragment>\\r\\n  #include <color_fragment>\\r\\n\\r\\n  if (diffuseColorGrey) {\\r\\n    diffuseColor.rgb = vec3(dot(diffuseColor.rgb, vec3(0.333333)));\\r\\n  }\\r\\n  #ifdef USE_MAP4\\r\\n  vec4 uvw = vPosition;\\r\\n  if( uvw.w > 0. && distort_radial(uvw, uvDistortion))\\r\\n  {\\r\\n    uvw = uvwPostTransform * uvw;\\r\\n    uvw.xyz /= uvw.w;\\r\\n    vec3 border = min(uvw.xyz, 1. - uvw.xyz);\\r\\n    if (all(greaterThan(border,vec3(0.))))\\r\\n    {\\r\\n      vec4 color = texture2D(map, uvw.xy);\\r\\n      color.a *= min(1., borderSharpness*min(border.x, border.y));\\r\\n      diffuseColor.rgb = mix(diffuseColor.rgb, color.rgb, color.a);\\r\\n    } else {\\r\\n      diffuseColor.rgb = mix(diffuseColor.rgb, fract(uvw.xyz), debugOpacity);\\r\\n    }\\r\\n  }\\r\\n  #endif\\r\\n\\r\\n  #include <alphatest_fragment>\\r\\n  outgoingLight = diffuseColor.rgb;\\r\\n  gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\r\\n  #include <tonemapping_fragment>\\r\\n  #include <encodings_fragment>\\r\\n  #include <fog_fragment>\\r\\n  #include <premultiplied_alpha_fragment>\\r\\n}\\r\\n\"","module.exports = \"uniform float size;\\r\\n#ifdef USE_PROJECTIVE_TEXTURING\\r\\nuniform vec3 textureCameraPosition;\\r\\nuniform mat4 textureCameraPreTransform; // Contains the rotation and the intrinsics of the camera, but not the translation\\r\\nvarying vec4 vPosition;\\r\\nvarying float vDistanceCamera;\\r\\n#endif\\r\\nvarying vec4 vColor;\\r\\n\\r\\nvoid main() {\\r\\n    gl_PointSize = size;\\r\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\r\\n\\r\\n#ifdef USE_PROJECTIVE_TEXTURING\\r\\n    mat4 m = modelMatrix;\\r\\n    m[3].xyz -= textureCameraPosition;\\r\\n    vPosition = textureCameraPreTransform * m * vec4(position, 1.0);\\r\\n#endif\\r\\n    vColor = vec4(color, 1.);\\r\\n}\\r\\n\"","module.exports = \"#include <distortions/radial_pars_fragment>\\r\\nuniform bool diffuseColorGrey;\\r\\n\\r\\n#ifdef USE_PROJECTIVE_TEXTURING\\r\\nuniform vec3 textureCameraPosition;\\r\\nuniform mat4 textureCameraPreTransform; // Contains the rotation and the intrinsics of the camera, but not the translation\\r\\nuniform mat4 textureCameraPostTransform;\\r\\nuniform RadialDistortion uvDistortion;\\r\\nuniform mat4 modelMatrix;\\r\\nvarying vec4 vPosition;\\r\\nuniform sampler2D map;\\r\\nuniform sampler2D depthMap;\\r\\n#endif\\r\\n\\r\\nvarying vec4 vColor;\\r\\n\\r\\nvoid main() {\\r\\n  vec4 finalColor = vColor;\\r\\n\\r\\n  if (diffuseColorGrey) {\\r\\n    finalColor.rgb = vec3(dot(vColor.rgb, vec3(0.333333)));\\r\\n  }\\r\\n\\r\\n#ifdef USE_PROJECTIVE_TEXTURING\\r\\n  // Project the point in the texture image\\r\\n  // p' = M' * (P - C')\\r\\n  // p': uvw\\r\\n  // M': textureCameraPreTransform\\r\\n  // P : vPositionWorld\\r\\n  // C': textureCameraPosition\\r\\n\\r\\n  vec4 uvw = vPosition;\\r\\n\\r\\n  // For the shadowMapping, which is not distorted\\r\\n  vec4 uvwNotDistorted = textureCameraPostTransform * uvw;\\r\\n  uvwNotDistorted.xyz /= uvwNotDistorted.w;\\r\\n\\r\\n  float minDist = texture2D(depthMap, uvwNotDistorted.xy).r;\\r\\n  float distanceCamera = uvwNotDistorted.z;\\r\\n\\r\\n  vec3 testBorderNotDistorted = min(uvwNotDistorted.xyz, 1. - uvwNotDistorted.xyz);\\r\\n\\r\\n  // ShadowMapping\\r\\n  if ( all(greaterThan(testBorderNotDistorted,vec3(0.))) && distanceCamera <= minDist + EPSILON ) {\\r\\n\\r\\n  // Don't texture if uvw.w < 0\\r\\n    if (uvw.w > 0. && distort_radial(uvw, uvDistortion)) {\\r\\n\\r\\n      uvw = textureCameraPostTransform * uvw;\\r\\n      uvw.xyz /= uvw.w;\\r\\n\\r\\n      // If coordinates are valid, they will be between 0 and 1 after normalization\\r\\n      // Test if coordinates are valid, so we can texture\\r\\n      vec3 testBorder = min(uvw.xyz, 1. - uvw.xyz);\\r\\n\\r\\n      if (all(greaterThan(testBorder,vec3(0.))))\\r\\n      {\\r\\n        vec4 color = texture2D(map, uvw.xy);\\r\\n        finalColor.rgb = mix(finalColor.rgb, color.rgb, color.a);\\r\\n      }\\r\\n    }\\r\\n  } else {\\r\\n    finalColor.rgb = vec3(0.2); // shadow color\\r\\n  }\\r\\n\\r\\n#endif\\r\\n\\r\\n  gl_FragColor =  finalColor;\\r\\n}\\r\\n\"","module.exports = \"varying vec4 vPositionImage;\\r\\nuniform float size;\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n    vPositionImage = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\r\\n    gl_Position = vPositionImage;\\r\\n\\t\\tgl_PointSize = size;\\r\\n\\r\\n}\\r\\n\"","module.exports = \"varying vec4 vPositionImage;\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n  float distanceCamera = ((vPositionImage.z / vPositionImage.w) + 1.) / 2.;\\r\\n  gl_FragColor = vec4(vec3(distanceCamera), 1.);\\r\\n\\r\\n}\\r\\n\"","module.exports = \"// M^(-1) * screen -> this.viewProjectionScreenInverse\\r\\n// C -> uniform vec3 cameraPosition\\r\\n// M' -> this.textureCameraPostTransform * this.textureCameraPreTransform\\r\\n// C' -> this.textureCameraPosition\\r\\n// P -> attribute vec3 position;\\r\\n\\r\\nuniform float size;\\r\\nvarying vec4 vColor;\\r\\n\\r\\nuniform vec3 textureCameraPosition;\\r\\nuniform mat4 textureCameraPreTransform;\\r\\nuniform mat4 textureCameraPostTransform;\\r\\nuniform sampler2D depthMap;\\r\\nuniform vec3 E_prime;\\r\\nuniform mat3 M_prime_Pre;\\r\\nuniform mat3 viewProjectionScreenInverse;\\r\\nvarying mat3 vH;\\r\\nvarying float passShadowMapTest;\\r\\n\\r\\n\\r\\nvoid main() {\\r\\n    gl_PointSize = size;\\r\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\r\\n    vColor = vec4(color, 1.);\\r\\n\\r\\n\\r\\n    // Homography\\r\\n\\r\\n    vec4 P = modelMatrix * vec4( position, 1.0 );\\r\\n    P.xyz = P.xyz/P.w-cameraPosition;\\r\\n    vec3 N = P.xyz;\\r\\n    mat3 fraction = mat3(N.x*E_prime, N.y*E_prime, N.z*E_prime) / dot(N, P.xyz);\\r\\n    vH = (M_prime_Pre + fraction) * viewProjectionScreenInverse;\\r\\n\\r\\n\\r\\n    // ShadowMapping\\r\\n\\r\\n    mat4 m = modelMatrix;\\r\\n    m[3].xyz -= textureCameraPosition;\\r\\n    vec4 uvwNotDistorted = textureCameraPostTransform * textureCameraPreTransform * m * vec4(position, 1.0);\\r\\n    uvwNotDistorted.xyz /= uvwNotDistorted.w;\\r\\n\\r\\n    // If using ShadowMapMaterial:\\r\\n    // float minDist = unpackRGBAToDepth(texture2D(depthMap, uvwNotDistorted.xy));\\r\\n\\r\\n    float minDist = texture2D(depthMap, uvwNotDistorted.xy).r;\\r\\n    float distanceCamera = uvwNotDistorted.z;\\r\\n    vec3 testBorderNotDistorted = min(uvwNotDistorted.xyz, 1. - uvwNotDistorted.xyz);\\r\\n    if ( all(greaterThan(testBorderNotDistorted,vec3(0.))) && distanceCamera <= minDist + EPSILON ) {\\r\\n      passShadowMapTest = 1.0;\\r\\n    } else {\\r\\n      passShadowMapTest = 0.0;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"#include <distortions/radial_pars_fragment>\\r\\n\\r\\nuniform bool diffuseColorGrey;\\r\\nuniform sampler2D map;\\r\\nuniform RadialDistortion uvDistortion;\\r\\nuniform mat3 M_prime_Post;\\r\\nvarying mat3 vH;\\r\\nvarying vec4 vColor;\\r\\nvarying float passShadowMapTest;\\r\\n\\r\\nvoid main() {\\r\\n  vec4 finalColor = vColor;\\r\\n\\r\\n  if (diffuseColorGrey) {\\r\\n    finalColor.rgb = vec3(dot(vColor.rgb, vec3(0.333333)));\\r\\n  }\\r\\n\\r\\n  if (passShadowMapTest > 0.5) {\\r\\n\\r\\n    vec3 texCoord = vH * vec3(gl_FragCoord.xy, 1.);\\r\\n\\r\\n    // Don't texture if texCoord.z < 0 (z = w in this case)\\r\\n    if (texCoord.z > 0. && distort_radial_vec3(texCoord, uvDistortion)) {\\r\\n\\r\\n      texCoord = M_prime_Post * texCoord;\\r\\n      texCoord /= texCoord.z;\\r\\n\\r\\n      // Test if coordinates are valid, so we can texture\\r\\n      vec2 testBorder = min(texCoord.xy, 1. - texCoord.xy);\\r\\n\\r\\n      if (all(greaterThan(testBorder,vec2(0.))))\\r\\n      {\\r\\n        finalColor = texture2D(map, texCoord.xy);\\r\\n      } else {\\r\\n    \\t   finalColor.rgb = vec3(0.2); // shadow color\\r\\n      }\\r\\n\\r\\n    } else {\\r\\n  \\t   finalColor.rgb = vec3(0.2); // shadow color\\r\\n    }\\r\\n\\r\\n  } else {\\r\\n     finalColor.rgb = vec3(0.2); // shadow color\\r\\n  }\\r\\n\\r\\n  gl_FragColor =  finalColor;\\r\\n}\\r\\n\"","module.exports = \"void fromRadial(const vec2 center, const vec2 resolution, const float pad, inout vec2 p) {\\r\\n  p.y *= 2.;\\r\\n  if(p.y>1.) {\\r\\n    p.y -= 1.;\\r\\n    p = ((resolution+2.*pad)*p-pad)/resolution;\\r\\n    float t = p.x < center.x ? p.x/center.x : (1.-p.x)/(1.-center.x) ;\\r\\n    p.y = mix(p.y, center.y, t);\\r\\n  } else {\\r\\n    p = ((resolution+2.*pad)*p-pad)/resolution;\\r\\n    float t = p.y < center.y ? p.y/center.y : (1.-p.y)/(1.-center.y) ;\\r\\n    p.x = mix(p.x, center.x, t);\\r\\n  }\\r\\n}\\r\\n\\r\\nvoid toRadial(const vec2 center, const vec2 resolution, const float pad, inout vec2 p) {\\r\\n  float t = p.y < center.y ? p.y/center.y : (1.-p.y)/(1.-center.y) ;\\r\\n  float u = p.x < center.x ? p.x/center.x : (1.-p.x)/(1.-center.x) ;\\r\\n  if(t>u) {\\r\\n    p.x -= 0.5/resolution.x;\\r\\n    p.y = mix(p.y, center.y, -u/(1.-u));\\r\\n    p = clamp(p, 0., 1.);\\r\\n    p = (resolution*p +pad)/(resolution+2.*pad);\\r\\n    p.y++;\\r\\n  } else {\\r\\n    p.y -= 0.5/resolution.y;\\r\\n    p.x = mix(p.x, center.x, -t/(1.-t));\\r\\n    p = clamp(p, 0., 1.);\\r\\n    p = (resolution*p +pad)/(resolution+2.*pad);\\r\\n  }\\r\\n  p.y *= 0.5;\\r\\n}\\r\\n\"","module.exports = \"#version 300 es\\r\\nprecision highp float;\\r\\nprecision highp int;\\r\\n\\r\\nin vec3 position;\\r\\nin vec2 uv;\\r\\nout vec2 vUv;\\r\\n\\r\\nvoid main() {\\r\\n  vUv = uv;\\r\\n  gl_Position = vec4( position, 1.0 );\\r\\n}\\r\\n\"","import { PerspectiveCamera, Vector2, Matrix4 } from 'three';\r\n\r\nconst ndcMatrix = new Matrix4().set(\r\n    2, 0, 0, -1,\r\n    0, -2, 0, 1,\r\n    0, 0, 1, 0,\r\n    0, 0, 0, 1);\r\n\r\nMatrix4.prototype.lerp = function(m, t) {\r\n    var te = this.elements;\r\n    var me = m.elements;\r\n    te[0]+=t*(me[0]-te[0]);   te[1]+=t*(me[1]-te[1]);   te[2]+=t*(me[2]-te[2]);   te[3]+=t*(me[3]-te[3]);\r\n    te[4]+=t*(me[4]-te[4]);   te[5]+=t*(me[5]-te[5]);   te[6]+=t*(me[6]-te[6]);   te[7]+=t*(me[7]-te[7]);\r\n    te[8]+=t*(me[8]-te[8]);   te[9]+=t*(me[9]-te[9]);   te[10]+=t*(me[10]-te[10]);te[11]+=t*(me[11]-te[11]);\r\n    te[12]+=t*(me[12]-te[12]);te[13]+=t*(me[13]-te[13]);te[14]+=t*(me[14]-te[14]);te[15]+=t*(me[15]-te[15]);\r\n    return this;\r\n};\r\n\r\nclass PhotogrammetricCamera extends PerspectiveCamera {\r\n    /**\r\n     * @Constructor\r\n     * @param {number|Vector2} focal - focal length in pixels (default: x=1024, y=x)\r\n     * @param {number|Vector2} size - image size in pixels (default: x=1024, y=x)\r\n     * @param {Vector2} point - principal point in pixels (default: size/2)\r\n     * @param {number} skew - shear transform parameter (default: 0)\r\n     * @param {Distortion[]} distos - array of distortions, in the order of application used during projection (default: [])\r\n     * @param {number} near - Camera frustum near plane (default: see THREE.PerspectiveCamera).\r\n     * @param {number} far - Camera frustum far plane (default: see THREE.PerspectiveCamera).\r\n     * @param {number} aspect - aspect ratio of the camera (default: size.x/size.y).\r\n     * @param {Matrix4} imageMatrix - an optional perspective post-distortion transform in image space (default: undefined).\r\n     * @param {Texture} mask - an optional texture mask (default: undefined).\r\n     */\r\n    constructor(focal, size, point, skew, distos, near, far, aspect, imageMatrix, mask) {\r\n        focal = Array.isArray(focal) ? new Vector2().fromArray(focal) : (focal || 1024);\r\n        point = Array.isArray(point) ? new Vector2().fromArray(point) : point;\r\n        size = Array.isArray(size) ? new Vector2().fromArray(size) : (size || 1024);\r\n        focal = focal.isVector2 ? focal : new Vector2(focal, focal);\r\n        size = size.isVector2 ? size : new Vector2(size, size);\r\n        skew = skew || 0;\r\n        point = point || size.clone().multiplyScalar(0.5);\r\n        aspect = aspect || size.x / size.y;\r\n\r\n        super(undefined, aspect, near, far);\r\n        // for compatibility with THREE.PerspectiveCamera, provide a fov property (computed from focal.y and size.y)\r\n        Object.defineProperty(this, 'fov', {\r\n            get: () => Math.atan2(this.view.fullHeight, 2 * this.focal.y) * 360 / Math.PI,\r\n            // setting the fov overwrites focal.x and focal.y\r\n            set: (fov) => {\r\n                var focal = 0.5 * this.view.fullHeight / Math.tan(fov * Math.PI / 360);\r\n                this.focal.x = focal;\r\n                this.focal.y = focal;\r\n            },\r\n        });\r\n        this.isPhotogrammetricCamera = true;\r\n        this.focal = focal;\r\n        this.point = point;\r\n        this.skew = skew;\r\n        this.distos = distos || [];\r\n        this.zoom = 1;\r\n        this.view = {\r\n            enabled: false,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            width: size.x,\r\n            height: size.y,\r\n            fullWidth: size.x,\r\n            fullHeight: size.y,\r\n        };\r\n\r\n        // filmOffset is not supported\r\n        // filmGauge is only used in compatibility PerspectiveCamera functions\r\n        this.filmOffset = 0;\r\n        this.mask = mask;\r\n\r\n        this.preProjectionMatrix = new Matrix4();\r\n        this.postProjectionMatrix = new Matrix4();\r\n        this.textureMatrix = new Matrix4();\r\n        this.imageMatrix = imageMatrix ? new Matrix4().copy(imageMatrix) : new Matrix4().identity();\r\n        this.updateProjectionMatrix();\r\n    }\r\n\r\n    updateProjectionMatrix() {\r\n        if (!this.preProjectionMatrix) {\r\n            // super() calls updateProjectionMatrix(), which is not yet fully initialized\r\n            super.updateProjectionMatrix();\r\n            return;\r\n        }\r\n\r\n        const c = -(this.far + this.near) / (this.far - this.near);\r\n        const d = -2 * this.far * this.near / (this.far - this.near);\r\n        this.preProjectionMatrix.set(\r\n            this.focal.x, -this.skew, -this.point.x, 0,\r\n            0, -this.focal.y, -this.point.y, 0,\r\n            0, 0, c, d,\r\n            0, 0, -1, 0);\r\n\r\n        this.textureMatrix.makeScale(\r\n            1 / this.view.fullWidth,\r\n            1 / this.view.fullHeight,\r\n            1);\r\n        if (this.imageMatrix) {\r\n            this.textureMatrix.multiply(this.imageMatrix);\r\n        }\r\n        var textureAspect = this.view.fullWidth / this.view.fullHeight;\r\n        if (this.view.enabled) {\r\n            textureAspect = this.view.width / this.view.height;\r\n            var sx = this.view.fullWidth / this.view.width;\r\n            var sy = this.view.fullHeight / this.view.height;\r\n            var ox = this.view.offsetX / this.view.width;\r\n            var oy = this.view.offsetY / this.view.height;\r\n            this.textureMatrix.premultiply(new Matrix4().set(\r\n                sx, 0, 0, -ox,\r\n                0, sy, 0, -oy,\r\n                0, 0, 1, 0,\r\n                0, 0, 0, 1));\r\n        }\r\n\r\n        // take zoom and aspect into account\r\n        var aspectRatio = this.aspect / textureAspect;\r\n        var zoom = new Vector2(this.zoom, this.zoom);\r\n        if (aspectRatio > 1) {\r\n            zoom.x /= aspectRatio;\r\n        } else {\r\n            zoom.y *= aspectRatio;\r\n        }\r\n        this.postProjectionMatrix.makeScale(zoom.x, zoom.y, 1);\r\n        this.postProjectionMatrix.multiply(ndcMatrix);\r\n        this.postProjectionMatrix.multiply(this.textureMatrix);\r\n\r\n        // projectionMatrix is provided as an approximation: its usage neglects the effects of distortions\r\n        this.projectionMatrix.multiplyMatrices(this.postProjectionMatrix, this.preProjectionMatrix);\r\n\r\n        return this;\r\n    }\r\n\r\n    // transform in place a 3D point p from view coordinates to pixel coordinates in the distorted image frame:\r\n    // Xleft=0, Xright=size.x, Ybottom=0, Ytop=size.y, Znear=-1, Zfar=1\r\n    // this transform is not influenced by the aspect,  zoom\r\n    distort(p) {\r\n        p.applyMatrix4(this.matrixWorldInverse);\r\n        p.applyMatrix4(this.preProjectionMatrix);\r\n        p = this.distos.reduce((q, disto) => disto.project(q), p);\r\n        return p;\r\n    }\r\n\r\n    // transform in place a 3D point p from view coordinates to texture coordinates:\r\n    // Uleft=0, Uright=1, Vbottom=0, Vtop=1, Znear=-1, Zfar=1\r\n    // this transform is not influenced by the aspect and zoom\r\n    texture(p) {\r\n        this.distort(p);\r\n        p.applyMatrix4(this.textureMatrix);\r\n        return p;\r\n    }\r\n\r\n    // transform in place a 3D point p from view coordinates to NDC coordinates:\r\n    // Xleft=-1, Xright=1, Ybottom=-1, Ytop=1, Znear=-1, Zfar=1\r\n    // this transform takes the aspect and zoom into account\r\n    project(p) {\r\n        this.distort(p);\r\n        p.applyMatrix4(this.postProjectionMatrix);\r\n        return p;\r\n    }\r\n\r\n    copy(source, recursive) {\r\n\t\t\t  if (this==source) return this;\r\n        super.copy(source, recursive);\r\n        return this.set(source);\r\n    }\r\n\r\n    // THREE.PerspectiveCamera compatibility\r\n    getEffectiveFOV() {\r\n        return Math.atan2(this.view.fullHeight, 2 * this.focal.y * this.zoom) * 360 / Math.PI;\r\n    }\r\n\r\n    getFocalLength() {\r\n        return this.focal.y * this.getFilmHeight() / this.view.fullHeight;\r\n    }\r\n\r\n    setFocalLength(focalLength) {\r\n        focalLength *= this.view.fullHeight / this.getFilmHeight();\r\n        this.focal.x = focalLength;\r\n        this.focal.y = focalLength;\r\n        return this.updateProjectionMatrix();\r\n    }\r\n\r\n    lerp(camera, t) {\r\n        this.focal.lerp(camera.focal, t);\r\n        this.point.lerp(camera.point, t);\r\n        this.position.lerp(camera.position, t);\r\n        this.quaternion.slerp(camera.quaternion, t);\r\n        // TODO: this.distos = ???\r\n        this.skew += t * (camera.skew - this.skew);\r\n        this.zoom += t * (camera.zoom - this.zoom);\r\n        this.aspect += t *(camera.aspect - this.aspect);\r\n        this.near += t * (camera.near - this.near);\r\n        this.far += t *(camera.far - this.far);\r\n        this.view.offsetX += t * (camera.view.offsetX - this.view.offsetX);\r\n        this.view.offsetY += t * (camera.view.offsetY - this.view.offsetY);\r\n        this.view.width += t * (camera.view.width - this.view.width);\r\n        this.view.height += t * (camera.view.height - this.view.height);\r\n        this.view.fullWidth += t * (camera.view.fullWidth - this.view.fullWidth);\r\n        this.view.fullHeight += t * (camera.view.fullHeight - this.view.fullHeight);\r\n        return this.updateProjectionMatrix();\r\n    }\r\n\r\n    set(source) {\r\n        this.name = source.name;\r\n        this.focal.copy(source.focal);\r\n        this.point.copy(source.point);\r\n        this.position.copy(source.position);\r\n        this.quaternion.copy(source.quaternion);\r\n        this.distos = source.distos.slice(0); // TODO: deep copy ?\r\n        this.skew = source.skew;\r\n        this.zoom = source.zoom;\r\n        this.aspect = source.aspect;\r\n        this.near = source.near;\r\n        this.far = source.far;\r\n        Object.assign(this.view, source.view);\r\n        return this.updateProjectionMatrix();\r\n    }\r\n}\r\n\r\nexport default PhotogrammetricCamera;\r\n","// polynom with coefficients c evaluated at x using Horner's method\r\nfunction polynom(c, x) {\r\n    var res = c[c.length - 1];\r\n    for (var i = c.length - 2; i >= 0; --i) {\r\n        res = res * x + c[i];\r\n    }\r\n    return res;\r\n}\r\nfunction polynomVector3(c, x) {\r\n    return c.x+x*(c.y+x*c.z);\r\n}\r\n\r\n// if anyone needs support for RadFour7x2, RadFour11x2, RadFour15x2 or RadFour19x2, micmac code is here :\r\n// https://github.com/micmacIGN/micmac/blob/e0008b7a084f850aa9db4dc50374bd7ec6984da6/src/photogram/phgr_ebner_brown_dist.cpp#L720-L875\r\n\r\nexport default {\r\n    polynom,\r\n    polynomVector3,\r\n};\r\n","import { Vector2, Vector4, ShaderChunk } from 'three';\r\nimport { default as PhotogrammetricDistortion } from '../PhotogrammetricDistortion';\r\n\r\n// http://fr.wikipedia.org/wiki/Methode_de_Cardan\r\nfunction cardan_cubic_roots(a, b, c, d)\r\n{\r\n    if (a == 0) return quadratic_roots(b, c, d);\r\n    var vt = -b / (3 * a);\r\n    var a2 = a * a;\r\n    var b2 = b * b;\r\n    var a3 = a * a2;\r\n    var b3 = b * b2;\r\n    var p = c / a - b2 / (3 * a2);\r\n    var q = b3 / (a3 * 13.5) + d / a - b * c / (3 * a2);\r\n    if (p == 0) {\r\n        var x0 = cubic_root(-q) + vt;\r\n        return [x0, x0, x0];\r\n    }\r\n    var p3_4_27 = p * p * p * 4 / 27;\r\n    var del = q * q + p3_4_27;\r\n\r\n    if (del > 0) {\r\n        var sqrt_del = Math.sqrt(del);\r\n        var u = cubic_root((-q + sqrt_del) / 2);\r\n        var v = cubic_root((-q - sqrt_del) / 2);\r\n        return [u + v + vt];\r\n    } else if (del == 0) {\r\n        var z0 = 3 * q / p;\r\n        var x12 = vt - z0 * 0.5;\r\n        return [vt + z0, x12, x12];\r\n    } else { // (del < 0)\r\n        var kos = Math.acos(-q / Math.sqrt(p3_4_27));\r\n        var r = 2 * Math.sqrt(-p / 3);\r\n        return [\r\n            vt + r * Math.cos((kos) / 3),\r\n            vt + r * Math.cos((kos + Math.PI) / 3),\r\n            vt + r * Math.cos((kos + Math.PI * 2) / 3),\r\n        ];\r\n    }\r\n}\r\n\r\nfunction quadratic_roots(a, b, c)\r\n{\r\n    var delta = b * b - 4 * a * c;\r\n    if (delta < 0) return [];\r\n    var x0 = -b / (2 * a);\r\n    if (delta == 0) return [x0];\r\n    var sqr_delta_2a = Math.sqrt(delta) / (2 * a);\r\n    return [x0 - sqr_delta_2a, x0 + sqr_delta_2a];\r\n}\r\n\r\nfunction sgn(x) { return (x > 0) - (x < 0); }\r\nfunction cubic_root(x) { return sgn(x) * Math.pow(Math.abs(x), 1 / 3); }\r\n\r\n// maximum squared radius of a radial distortion of degree 3 (r3, r5, r7)\r\nfunction r2max(R)\r\n{\r\n    // returned the square of the smallest positive root of the derivative of the distorsion polynomial\r\n    // which tells where the distorsion might no longer be bijective.\r\n    var roots = cardan_cubic_roots(7 * R[2], 5 * R[1], 3 * R[0], 1);\r\n    var imax = -1;\r\n    for (var i in roots) if (roots[i] > 0 && (imax == -1 || roots[imax] > roots[i])) imax = i;\r\n    if (imax == -1) return Infinity; // no roots : all is valid !\r\n    return roots[imax];\r\n}\r\n\r\nclass RadialDistortion {\r\n/**\r\n * @Constructor\r\n * @param {Number[2]|Vector2} C - distortion center\r\n * @param {Number[]} R - polynomial distortion coefficients : [r3, r5=0, r7=0]\r\n * @param {Number?} R2max - the validity domain of the distortion as the squared distance in pixels to its center\r\n **/\r\n  constructor(C, R, R2max) {\r\n    if(R.length > 3) {\r\n        console.warn('RadialDistortion is currently limited to degrees 3,5,7: Neglecting higher order coefficients.');\r\n    }\r\n    R[1] = R[1] || 0;\r\n    R[2] = R[2] || 0;\r\n    R[3] = R2max || r2max(R);\r\n    this.C = Array.isArray(C) ? new Vector2().fromArray(C) : C;\r\n    this.R = new Vector4().fromArray(R);\r\n    this.isRadialDistortion = true;\r\n  }\r\n\r\n\r\n// https://github.com/micmacIGN/micmac/blob/e0008b7a084f850aa9db4dc50374bd7ec6984da6/src/photogram/phgr_ebner_brown_dist.cpp#L441-L475\r\n// WithFraser=false\r\n project(p) {\r\n    var x = p.x - this.C.x;\r\n    var y = p.y - this.C.y;\r\n    var r2 = x * x + y * y;\r\n    var radial = r2 * PhotogrammetricDistortion.polynomVector3(this.R, r2);\r\n    p.x += radial * x;\r\n    p.y += radial * y;\r\n    return p;\r\n  }\r\n}\r\n\r\nShaderChunk[\"distortions/radial_pars_fragment\"] = `\r\nstruct RadialDistortion {\r\n  vec2 C;\r\n  vec4 R;\r\n};\r\n\r\nbool distort_radial(inout vec4 p, RadialDistortion disto) {\r\n  p /= p.w;\r\n  vec2 r = p.xy - disto.C;\r\n  float r2 = dot(r, r);\r\n  if (r2 > disto.R.w) return false; // to be culled\r\n  float r4 = r2*r2;\r\n  p.xy += dot(disto.R.xyz, vec3(r2, r4, r2*r4)) * r;\r\n  return true;\r\n}\r\n\r\nbool distort_radial_vec3(inout vec3 p, RadialDistortion disto) {\r\n  p /= p.z;\r\n  vec2 r = p.xy - disto.C;\r\n  float r2 = dot(r, r);\r\n  if (r2 > disto.R.w) return false; // to be culled\r\n  float r4 = r2*r2;\r\n  p.xy += dot(disto.R.xyz, vec3(r2, r4, r2*r4)) * r;\r\n  return true;\r\n}\r\n`;\r\n\r\nexport default RadialDistortion;\r\n","import { Vector2, Vector3, Vector4 } from 'three';\r\nimport PhotogrammetricCamera from '../cameras/PhotogrammetricCamera';\r\nimport { default as RadialDistortion } from '../cameras/distortions/RadialDistortion';\r\n\r\nclass BundlerOrientationParser  {\r\n    /** @module BundlerOrientationParser */\r\n\r\n    /** Parse orientations using the Bundler format\r\n     * @function parse\r\n     * @param {string[2]} texts - the text contents of the list and Bundler(out) files.\r\n     * @return {Camera[]} - an array of cameras.\r\n     */\r\n     static parse(texts) {\r\n        const list = BundlerOrientationParser.parseList(texts[0]);\r\n        return BundlerOrientationParser.parseOut(texts[1], list);\r\n      }\r\n\r\n    /** Parse a list of image filenames and pixel dimensions\r\n    * each line should be \"filename width height\"\r\n    * @function parseList\r\n    * @param {string} text - the text contents of the list file.\r\n    * @return {names,sizes} - an array of names and an array of sizes (Number[2])\r\n    */\r\n    static parseList(text) {\r\n        const lines = text.split(/\\n/).map(l => l.trim().split(/\\s+/));\r\n        const names = [];\r\n        const sizes = [];\r\n        for(var l=0;l<lines.length; ++l) {\r\n          names[l] = lines[l][0];\r\n          sizes[l] = [Number(lines[l][1]), Number(lines[l][2])];\r\n        }\r\n         return {names:names, sizes:sizes};\r\n    }\r\n\r\n    /** Parse a Bundler out file\r\n    * @function parseList\r\n    * @param {string} text - the text contents of the list file.\r\n    * @param {names,sizes} list - the parsed content of the list file.\r\n    * @return {Camera[]} - an array of cameras.\r\n    */\r\n    static parseOut(text, list) {\r\n      const header = \"# Bundle file v0.3\";\r\n      if(!text.startsWith(header))\r\n        {\r\n          // console.error(\"Error parsing Bundler file : \\\"\"+filename+\"\\\" should start with \\\"\"+header+\"\\\"\");\r\n          return null;\r\n        }\r\n      const lines = text.split(/\\n/).map(l => l.trim().split(/\\s+/).map(Number));\r\n      const num_cameras = lines[1][0];\r\n      const num_points = lines[1][1];\r\n\r\n      const cameras = [];\r\n      for(var c=0;c<num_cameras; ++c)\r\n      {\r\n        const l = 2+5*c;\r\n        const f = lines[l][0];\r\n        const k1 = lines[l][1];\r\n        const k2 = lines[l][2];\r\n        const R1 = lines[l+1];\r\n        const R2 = lines[l+2];\r\n        const R3 = lines[l+3];\r\n        const t  = lines[l+4];\r\n\r\n        const size = list.sizes[c];\r\n        const center = new Vector2().fromArray(size).multiplyScalar(0.5);\r\n        const f2 = f*f;\r\n        const k = [k1/f2, k2/(f2*f2), 0];\r\n        const disto = new RadialDistortion(center, k);\r\n\r\n        const cam = new PhotogrammetricCamera(f, size, center, 0, [disto]);\r\n        cam.name = list.names[c];\r\n        cam.matrix.set(\r\n          R1[0], R2[0], R3[0], 0,\r\n          R1[1], R2[1], R3[1], 0,\r\n          R1[2], R2[2], R3[2], 0,\r\n          0, 0, 0, 1);\r\n        cam.position.fromArray(t);\r\n        cam.position.applyMatrix4(cam.matrix).negate();\r\n        cam.matrix.setPosition(cam.position);\r\n        cam.quaternion.setFromRotationMatrix(cam.matrix);\r\n        cam.near = 0.1;\r\n        cam.far = 1000;\r\n        cam.updateMatrixWorld(true);\r\n        cameras.push(cam);\r\n\r\n        cam.check = function check(epsilon, N) {\r\n          epsilon = epsilon || this.check.epsilon;\r\n          //console.log(epsilon, N, this.check.points);\r\n          var array = N ? this.check.points.slice(0, N) : this.check.points;\r\n          return array.reduce((ok, point) => {\r\n            var pp = this.distort(point.p3.clone());\r\n            var d = point.p2.distanceTo(pp);\r\n            if (d > epsilon) {\r\n              ok = false;\r\n              console.warn(point.id, d, pp, point.p2, point.p3);\r\n            }\r\n            return ok;\r\n          }, true);\r\n        }\r\n        cam.check.epsilon = 2;\r\n        cam.check.points = [];\r\n      }\r\n\r\n      const points = new Float32Array(3*num_points);\r\n      const colors = new Uint8Array(3*num_points);\r\n      for(var p=0;p<num_points; ++p)\r\n      {\r\n        const i = 3*p;\r\n        const l = 2+5*num_cameras+i;\r\n        const xyz = lines[l];\r\n        const rgb = lines[l+1];\r\n        const viewlist = lines[l+2];\r\n        points.set(xyz,i);\r\n        colors.set(rgb,i);\r\n        const p3 = new Vector3().fromArray(xyz);\r\n        const num_views = viewlist[0];\r\n        for(var v = 0; v<num_views; ++v)\r\n        {\r\n          const c = viewlist[1+4*v];\r\n          if (c>=cameras.length) continue;\r\n          const cam = cameras[viewlist[1+4*v]]\r\n          // const key = viewlist[2+4*v];\r\n          const p2 = new Vector2().fromArray(viewlist,3+4*v);\r\n          p2.add(cam.point);\r\n          p2.y = cam.view.fullHeight - p2.y;\r\n\r\n          cam.check.points.push({\r\n            id: p+\"/\"+v,\r\n            p2: p2,\r\n            p3: p3\r\n          });\r\n        }\r\n      }\r\n      cameras.points = points;\r\n      cameras.colors = colors;\r\n      return cameras;\r\n    }\r\n\r\n};\r\n\r\nBundlerOrientationParser.format = 'Bundler/orientation';\r\nBundlerOrientationParser.extensions = ['out'];\r\nBundlerOrientationParser.mimetypes = ['application/text'];\r\nBundlerOrientationParser.fetchtype = 'text';\r\n\r\nexport default BundlerOrientationParser;\r\n","import { Vector3 } from 'three';\r\nimport PhotogrammetricCamera from '../cameras/PhotogrammetricCamera';\r\nimport RadialDistortion from '../cameras/distortions/RadialDistortion';\r\n\r\nexport default {\r\n    /** @module GeoJSONParser */\r\n\r\n\r\n    /** Parse an orientation using a GEOJSON format\r\n     * @function parseFeature\r\n     * @param {JSON} feature - a GEOJSON point feature encoding a camera.\r\n     * @return {Camera} - the decoded camera.\r\n     *\r\n     */\r\n    parseFeature: function parseFeature(feature) {\r\n      const coord = feature.geometry.coordinates;\r\n      const prop = feature.properties;\r\n\r\n      const name = prop.name;\r\n      const epsgquaternion = prop.epsgquaternion || 2154;\r\n      const source = prop.source;\r\n\r\n      // Intrinsec properties\r\n      var focal = [ prop.fx, prop.fy ];\r\n      var size  = [ prop.sx, prop.sy ];\r\n      var point = [ prop.px, prop.py ];\r\n      var C = [ prop.cx, prop.cy ];\r\n      var R = [ prop.c3, prop.c5, prop.c7 ];\r\n      var disto = [ new RadialDistortion(C, R, prop.cm) ];\r\n\r\n      var imageMatrix = new THREE.Matrix4();\r\n      if(prop.m00 != undefined){  // If there are some Crop Infos, we set the image matrix (not identity)\r\n          imageMatrix.elements[0]  = prop.m00;\r\n          imageMatrix.elements[1]  = prop.m01;\r\n          imageMatrix.elements[4]  = prop.m10;\r\n          imageMatrix.elements[5]  = prop.m11;\r\n          imageMatrix.elements[12] = prop.m20;\r\n          imageMatrix.elements[13] = prop.m21;\r\n      }\r\n      var camera = new PhotogrammetricCamera(focal, size, point, 0, disto, undefined, undefined, undefined, imageMatrix );\r\n\r\n      // We inject the name of the image in the camera attributes\r\n      camera.name = name;\r\n\r\n      // Extrinsics\r\n      const position = new THREE.Vector3(coord[0], coord[1], coord[2]);\r\n      const quaternion = new THREE.Quaternion(prop.qx, prop.qy, prop.qz, prop.qw);\r\n      camera.position.copy(position);\r\n\r\n/*\r\n      // Here we need to check the coordinate system of the received camera\r\n      // If already EPSG:4978, nothing to do. If other, we need to compute the new orientation in our scene system (4978)\r\n      if(epsgquaternion != 4978){  // projectionCode\r\n          var coords = new itowns.Coordinates('EPSG:4978', pos.x, pos.y, pos.z);\r\n          var quat_crs2crs = itowns.OrientationUtils.quaternionFromCRSToCRS('EPSG:' + epsgquaternion, \"EPSG:4978\")(coords);\r\n          quaternion.premultiply(quat_crs2crs);\r\n      }\r\n*/\r\n\r\n      camera.quaternion.copy(quaternion);\r\n      camera.userData.properties = prop;\r\n\r\n      return camera;\r\n    },\r\n\r\n    /** Parse an orientation using a GEOJSON format\r\n     * @function parse\r\n     * @param {string} text - the text content of the GeoJSON entry.\r\n     * @return {Camera[]} - an array of cameras.\r\n     *\r\n     */\r\n    parse: function parse(text) {\r\n        const cameras = [];\r\n        try {\r\n          const geojson = JSON.parse(text);\r\n          for( var feature of geojson.features ) {\r\n            cameras.push(this.parseFeature(feature))\r\n          }\r\n          return cameras;\r\n        } catch (e) {\r\n          //console.warn('not a geojson');\r\n          return null;\r\n        }\r\n    },\r\n\r\n    format: 'GEOJSON/orientation',\r\n    extensions: ['json','geojson'],\r\n    mimetypes: ['application/text'],\r\n    fetchtype: 'text',\r\n};\r\n","import {Matrix4, Vector3, Quaternion, Camera} from 'three';\r\nimport RadialDistortion from '../cameras/distortions/RadialDistortion';\r\nimport PhotogrammetricCamera from '../cameras/PhotogrammetricCamera';\r\n\r\nfunction getText(xml, tagName) {\r\n    var node = xml.getElementsByTagName(tagName)[0];\r\n    return node && node.childNodes[0].nodeValue.trim();\r\n}\r\n\r\nfunction getNumber(xml, tagName) {\r\n    return Number(getText(xml, tagName));\r\n}\r\n\r\nfunction getNumbers(xml, tagName, dims) {\r\n    var node = xml.getElementsByTagName(tagName)[0];\r\n    return dims.map(dim => getNumber(node, dim));\r\n}\r\n\r\nfunction parseSpheric(xml, size) {\r\n    var camera = new Camera();\r\n    camera.lambdaphi = getNumbers(xml, 'frame', ['lambda_min', 'lambda_max', 'phi_min', 'phi_max']);\r\n    // patching the ori.MatisParser..\r\n    camera.view.fullHeight = 718;\r\n    camera.lambdaphi[2] = camera.lambdaphi[3] - camera.view.fullHeight * (camera.lambdaphi[1] - camera.lambdaphi[0]) / camera.view.fullWidth;\r\n    // set the projection to the top face of the cube map\r\n    camera.projectionMatrix = new Matrix4().set(\r\n        camera.view.fullWidth, 0, camera.view.fullWidth * 0.5, 0,\r\n        0, camera.view.fullHeight, camera.view.fullHeight * 0.5, 0,\r\n        0, 0, 0, 1,\r\n        0, 0, 1, 0);\r\n    return camera;\r\n}\r\n\r\nfunction parseConic(xml, size) {\r\n    var focal = getNumber(xml, 'focale');\r\n    var point = getNumbers(xml, 'ppa', ['c', 'l']);\r\n    var skew = 0;\r\n    var disto = new RadialDistortion(\r\n        getNumbers(xml, 'pps', ['c', 'l']), // distortion center\r\n        getNumbers(xml, 'distortion', ['r3', 'r5', 'r7']) // radial distortion coefficients\r\n    );\r\n    var near = focal[0] * 0.035 / size[0]; // horizontal focal length in meters, assuming a 35mm-wide sensor\r\n    var far = 1000; // 1km\r\n    return new PhotogrammetricCamera(focal, size, point, skew, [disto], near, far);\r\n}\r\n\r\nfunction parseIntrinsics(xml) {\r\n    var size = getNumbers(xml, 'image_size', ['width', 'height']);\r\n\r\n    var spheric = xml.getElementsByTagName('spherique')[0];\r\n    if (spheric) {\r\n        return parseSpheric(spheric, size);\r\n    }\r\n\r\n    var sensor = xml.getElementsByTagName('sensor')[0];\r\n    if (sensor) {\r\n        return parseConic(sensor, size);\r\n    }\r\n\r\n    throw new Error('error parsing matis orientation');\r\n}\r\n\r\nfunction parseExtrinsics(xml) {\r\n    xml = xml.getElementsByTagName('extrinseque')[0];\r\n    var mat3d = xml.getElementsByTagName('mat3d')[0];\r\n    var M = new Matrix4();\r\n\r\n    if (mat3d) {\r\n        var L1 = getNumbers(mat3d, 'l1', ['x', 'y', 'z']);\r\n        var L2 = getNumbers(mat3d, 'l2', ['x', 'y', 'z']);\r\n        var L3 = getNumbers(mat3d, 'l3', ['x', 'y', 'z']);\r\n        M.set(\r\n            L1[0], L1[1], L1[2], 0,\r\n            L2[0], L2[1], L2[2], 0,\r\n            L3[0], L3[1], L3[2], 0,\r\n            0, 0, 0, 1);\r\n    } else {\r\n        var quat = getNumbers(xml, 'quaternion', ['x', 'y', 'z', 'w']);\r\n        M.makeRotationFromQuaternion(new Quaternion().fromArray(quat));\r\n    }\r\n\r\n    if (!getText(xml, 'Image2Ground')) M.transpose();\r\n\r\n    M.elements[12] = getNumber(xml, 'easting');\r\n    M.elements[13] = getNumber(xml, 'northing');\r\n    M.elements[14] = getNumber(xml, 'altitude');\r\n\r\n    // go from photogrammetric convention (X right, Y down, Z front) to js conventions (X right, Y up, Z back)\r\n    M.scale(new Vector3(1, -1, -1));\r\n    return M;\r\n}\r\n\r\nexport default {\r\n    /** @module MatisParser */\r\n    /** Parse an orientation using the IGN Matis internal XML format\r\n     * @function parse\r\n     * @param {string|XMLDocument} xml - the xml content of the orientation file.\r\n     * @return {Camera} - a camera.\r\n     *\r\n     */\r\n    parse: function parse(xml, source, name) {\r\n        if (!(xml instanceof Node)) {\r\n            xml = new window.DOMParser().parseFromString(xml, 'text/xml');\r\n        }\r\n        if (xml.children[0].tagName !== 'orientation') {\r\n            return undefined;\r\n        }\r\n        var camera = parseIntrinsics(xml);\r\n\r\n        camera.matrix = parseExtrinsics(xml);\r\n        camera.matrix.decompose(camera.position, camera.quaternion, camera.scale);\r\n        camera.updateMatrixWorld(true);\r\n        camera.name = name;\r\n        return camera;\r\n    },\r\n    format: 'matis/orientation',\r\n    extensions: ['xml'],\r\n    mimetypes: ['application/xml'],\r\n    fetchtype: 'xml',\r\n};\r\n","class BrownDistortion {\r\n\r\n  /**\r\n   * @Constructor\r\n   * @param {Number} F - focal length\r\n   * @param {Number[14]} P - coefficients\r\n   **/\r\n  constructor(F, P) {\r\n    this.F = F;\r\n    this.P = P;\r\n    this.isBrownDistortion = true;\r\n  }\r\n\r\n  project(p) {\r\n      // https://github.com/micmacIGN/micmac/blob/e0008b7a084f850aa9db4dc50374bd7ec6984da6/src/photogram/phgr_ebner_brown_dist.cpp#L401-L439\r\n      var x = p.x;\r\n      var y = p.y;\r\n      var x2 = x * x;\r\n      var y2 = y * y;\r\n      var xy = x * y;\r\n      var xy2 = x * y2;\r\n      var yx2 = y * x2;\r\n      var x2y2 = x2 * y2;\r\n      var P = this.P;\r\n      var f = (P[12] * x2y2 / this.F) + (P[13] * (x2 + y2));\r\n      p.x += P[0] * x + P[1] * y;\r\n      p.x += P[2] * xy + P[3] * y2 + P[4] * yx2 + P[5] * xy2 + P[6] * x2y2 + f * x;\r\n      p.y += P[7] * xy + P[8] * x2 + P[9] * yx2 + P[10] * xy2 + P[11] * x2y2 + f * y;\r\n      return p;\r\n  }\r\n\r\n}\r\n\r\nexport default BrownDistortion;\r\n","import { default as PhotogrammetricDistortion } from '../PhotogrammetricDistortion';\r\n\r\nclass FishEyeDistortion {\r\n\r\n  /**\r\n   * @Constructor\r\n   * @param {Number[]} P - ?\r\n   * @param {Number[2]} C - distortion center in pixels\r\n   * @param {Number} F - focal length in pixels\r\n   * @param {Number[]} l - coefficients\r\n   * @param {Number[]} R - radial coefficients\r\n   * @param {Bool} equisolid - equisolid fisheye or not\r\n   **/\r\n  constructor(P, C, F, l, R, equisolid) {\r\n    this.P = P;\r\n    this.C = C;\r\n    this.F = F;\r\n    this.l = l;\r\n    this.R = R;\r\n    this.equisolid = equisolid;\r\n    this.isFishEyeDistortion = true;\r\n  }\r\n\r\n  project(p) {\r\n    // https://github.com/micmacIGN/micmac/blob/e0008b7a084f850aa9db4dc50374bd7ec6984da6/src/photogram/phgr_ebner_brown_dist.cpp#L2169-L2352\r\n    // Apply N normalization\r\n    var A = (p.x - this.C[0]) / this.F;\r\n    var B = (p.y - this.C[1]) / this.F;\r\n    var R = Math.sqrt(A * A + B * B);\r\n    var theta = Math.atan(R);\r\n    if (this.equisolid) theta = 2 * Math.sin(0.5 * theta);\r\n    var lambda = theta / R;\r\n    var x = lambda * A;\r\n    var y = lambda * B;\r\n    var x2 = x * x;\r\n    var xy = x * y;\r\n    var y2 = y * y;\r\n    var r2 = x2 + y2;\r\n\r\n    // radial distortion and degree 1 polynomial\r\n    var radial = 1 + r2 * PhotogrammetricDistortion.polynom(this.R, r2);\r\n    p.x = y * this.l[1] + x * (radial + this.l[0]);\r\n    p.y = x * this.l[1] + y * radial;\r\n\r\n    // tangential distortion\r\n    var rk = 1;\r\n    for (var k = 0; k < this.P.length; k += 2) {\r\n        var K = k + 2;\r\n        p.x += rk * ((r2 + K * x2) * this.P[k] + this.P[k + 1] * K * xy);\r\n        p.y += rk * ((r2 + K * y2) * this.P[k + 1] + this.P[k] * K * xy);\r\n        rk *= r2;\r\n    }\r\n\r\n    // degree 3+ polynomial (no degree 2)\r\n    var X = [x2, xy, y2];\r\n    var j = 2;\r\n    for (var d = 3; j < this.l.length; ++d) {\r\n        X[d] = y * X[d - 1];\r\n        X[0] *= x;\r\n        p.y += this.l[j++] * X[0];\r\n        for (var l = 1; l < d; ++l) {\r\n            X[l] *= x;\r\n            p.x += this.l[j++] * X[l];\r\n            p.y += this.l[j++] * X[l];\r\n        }\r\n        p.x += this.l[j++] * X[d];\r\n        if (d % 2) {\r\n            p.y += this.l[j++] * X[d];\r\n        }\r\n    }\r\n\r\n    // Unapply N normalization\r\n    p.x = this.C[0] + this.F * p.x;\r\n    p.y = this.C[1] + this.F * p.y;\r\n    return p;\r\n  }\r\n}\r\n\r\nexport default FishEyeDistortion;\r\n","import { default as PhotogrammetricDistortion } from '../PhotogrammetricDistortion';\r\n\r\nclass FraserDistortion {\r\n\r\n  /**\r\n   * @Constructor\r\n   * @param {Number[2]} C - distortion center in pixels\r\n   * @param {Number[2]} P - coefficients\r\n   * @param {Number[]} R - radial coefficients\r\n   * @param {Number[2]} b - coefficients\r\n   **/\r\n  constructor(C, P, R, b) {\r\n    this.C = C;\r\n    this.P = P;\r\n    this.R = R;\r\n    this.b = b;\r\n    this.isFraserDistortion = true;\r\n  }\r\n\r\n// https://github.com/micmacIGN/micmac/blob/e0008b7a084f850aa9db4dc50374bd7ec6984da6/src/photogram/phgr_ebner_brown_dist.cpp#L441-L475\r\n// WithFraser=true\r\n  project(p) {\r\n    var x = p.x - this.C[0];\r\n    var y = p.y - this.C[1];\r\n    var x2 = x * x;\r\n    var y2 = y * y;\r\n    var xy = x * y;\r\n    var r2 = x2 + y2;\r\n    var radial = r2 * PhotogrammetricDistortion.polynom(this.R, r2);\r\n    p.x += radial * x + this.P[0] * (2 * x2 + r2) + this.P[1] * 2 * xy;\r\n    p.y += radial * y + this.P[1] * (2 * y2 + r2) + this.P[0] * 2 * xy;\r\n    p.x += this.b[0] * x + this.b[1] * y;\r\n    return p;\r\n  }\r\n}\r\n\r\nexport default FraserDistortion;\r\n","\r\nclass PolynomDistortion {\r\n\r\n  /**\r\n   * @Constructor\r\n   * @param {Number[2]} C - distortion center in pixels\r\n   * @param {Number} S - scale\r\n   * @param {Number[]} R - polynom coefficients\r\n   * @param {Integer?} degree - polynom degree (default: computed from R.length)\r\n   **/\r\n  constructor(C, S, R, degree) {\r\n    // l is length of R at degree d\r\n    // l(2)=6 and l(n)=l(n-1)+2n+2 <=> l = d * (d + 3) - 4\r\n    if(!degree)\r\n    {\r\n      // 1*d^2 + 3*d - (R.length+4) = 0\r\n      const l = R.length;\r\n      const delta = Math.sqrt(25+4*l); // sqrt(9+4*(R.length+4))\r\n      degree = Math.ceil(0.5*delta-1.5);\r\n      R.length = degree * (degree + 3) - 4;\r\n      R.fill(0,l);\r\n    }\r\n\r\n    // degree could be decreased if params has a long enough tail of zeroes\r\n    var firstZero = R.length - R.reverse().findIndex(x => x !== 0);\r\n    R.reverse();\r\n    for (var d = degree - 1; d > 0; --d) {\r\n        var l = d * (d + 3) - 4;\r\n        if (firstZero <= l) {\r\n            R = R.slice(0, l);\r\n            degree = d;\r\n        }\r\n    }\r\n    this.C = C;\r\n    this.S = S;\r\n    this.R = R;\r\n    this.degree = degree;\r\n    this.isPolynomDistortion = true;\r\n  }\r\n\r\n  // https://github.com/micmacIGN/micmac/blob/e0008b7a084f850aa9db4dc50374bd7ec6984da6/src/photogram/phgr_ebner_brown_dist.cpp#L527-L591\r\n  project(p) {\r\n    // Apply N normalization\r\n    p.x = (p.x - this.C[0]) / this.S;\r\n    p.y = (p.y - this.C[1]) / this.S;\r\n\r\n    var R = this.R;\r\n    var x = p.x;\r\n    var y = p.y;\r\n\r\n    // degree 2\r\n    var X = [x * x, x * y, y * y];\r\n    p.x += R[0] * x + R[1] * y + R[3] * X[1] - 2 * R[2] * X[0] + R[4] * X[2];\r\n    p.y += R[1] * x - R[0] * y + R[2] * X[1] - 2 * R[3] * X[2] + R[5] * X[0];\r\n\r\n    // degree 3+\r\n    var i = 6;\r\n    for (var d = 3; i < R.length; ++d) {\r\n        var j = i + d + 1;\r\n        X[d] = y * X[d - 1];\r\n        for (var l = 0; l < d; ++l) {\r\n            X[l] *= x;\r\n            p.x += R[i + l] * X[l];\r\n            p.y += R[j + l] * X[l];\r\n        }\r\n        p.x += R[i + d] * X[d];\r\n        p.y += R[j + d] * X[d];\r\n        i = j + d + 1;\r\n    }\r\n\r\n    // Unapply N normalization\r\n    p.x = this.C[0] + this.S * p.x;\r\n    p.y = this.C[1] + this.S * p.y;\r\n    return p;\r\n  }\r\n}\r\n\r\nexport default PolynomDistortion;\r\n","import { Vector2, Vector3, Vector4, Matrix4, Euler } from 'three';\r\nimport { default as BrownDistortion } from '../cameras/distortions/BrownDistortion';\r\nimport { default as EbnerDistortion } from '../cameras/distortions/EbnerDistortion';\r\nimport { default as FishEyeDistortion } from '../cameras/distortions/FishEyeDistortion';\r\nimport { default as FraserDistortion } from '../cameras/distortions/FraserDistortion';\r\nimport { default as PolynomDistortion } from '../cameras/distortions/PolynomDistortion';\r\nimport { default as RadialDistortion } from '../cameras/distortions/RadialDistortion';\r\n\r\nfunction parseText(xml, tagName) {\r\n    var node = xml.getElementsByTagName(tagName)[0];\r\n    return node && node.childNodes[0].nodeValue.trim();\r\n}\r\n\r\nfunction parseNumbers(xml, tagName, value) {\r\n    var text = parseText(xml, tagName);\r\n    return text ? text.split(' ').filter(String).map(Number) : value;\r\n}\r\n\r\nfunction parseVector2(xml, tagName, value) {\r\n    return new Vector2().fromArray(parseNumbers(xml, tagName, value));\r\n}\r\n\r\nfunction parseVector3(xml, tagName, value) {\r\n    return new Vector3().fromArray(parseNumbers(xml, tagName, value));\r\n}\r\n\r\nfunction parseChildNumbers(xml, tagName) {\r\n    return Array.from(xml.getElementsByTagName(tagName)).map(node => Number(node.childNodes[0].nodeValue));\r\n}\r\n\r\nfunction parseDistortion(xml) {\r\n    xml = xml.children[0];\r\n    var type = xml.tagName;\r\n    var params;\r\n    var states;\r\n    if (type === 'ModUnif') {\r\n        type = parseText(xml, 'TypeModele');\r\n        params = parseChildNumbers(xml, 'Params');\r\n        states = parseChildNumbers(xml, 'Etats');\r\n    }\r\n\r\n    switch (type) {\r\n        case 'ModNoDist'     : return undefined;\r\n        case 'eModeleEbner'  : return new Ebner(states[0], params);\r\n        case 'eModeleDCBrown': return new BrownDistortion(states[0], params);\r\n        case 'ModRad': {\r\n            const R = parseChildNumbers(xml, 'CoeffDist', []); // radial distortion coefficients\r\n            if(R.length == 0) return undefined;\r\n            const C = parseVector2(xml, 'CDist'); // distortion center in pixels\r\n            return new RadialDistortion(C, R);\r\n        }\r\n        case 'eModelePolyDeg2':\r\n        case 'eModelePolyDeg3':\r\n        case 'eModelePolyDeg4':\r\n        case 'eModelePolyDeg5':\r\n        case 'eModelePolyDeg6':\r\n        case 'eModelePolyDeg7':\r\n        {\r\n            const S = states[0];\r\n            const C = states.slice(1, 3);\r\n            const degree = Number(type.substr('eModelePolyDeg'.length));\r\n            const R = params;\r\n            return new PolynomDistortion(C, S, R, degree);\r\n        }\r\n        case 'ModPhgrStd': {\r\n            const C = parseNumbers(xml, 'CDist'); // distortion center in pixels\r\n            const R = parseChildNumbers(xml, 'CoeffDist'); // radial distortion coefficients\r\n            const P = parseNumbers(xml, 'P1', [0]).concat(parseNumbers(xml, 'P2', [0]));\r\n            const b = parseNumbers(xml, 'b1', [0]).concat(parseNumbers(xml, 'b2', [0]));\r\n            return new FraserDistortion(C, P, R, b);\r\n        }\r\n        case 'eModele_FishEye_10_5_5':\r\n        case 'eModele_EquiSolid_FishEye_10_5_5': {\r\n            const equisolid = type === 'eModele_EquiSolid_FishEye_10_5_5';\r\n            const F = states[0];\r\n            const C = params.slice(0, 2);\r\n            const R = params.slice(2, 12);\r\n            const P = params.slice(12, 22);\r\n            const l = params.slice(22);\r\n            return new FishEyeDistortion(P, C, F, l, R, equisolid);\r\n        }\r\n        default:\r\n            throw new Error(`Error parsing micmac orientation : unknown distortion ${xml.tagName}`);\r\n    }\r\n}\r\n\r\nfunction parseIntrinsics(xml, imageMatrix) {\r\n    if (!xml) {\r\n        throw new Error('Error parsing micmac orientation, no intrinsics');\r\n    }\r\n    if (!(xml instanceof Node)) {\r\n        xml = new window.DOMParser().parseFromString(xml, 'text/xml');\r\n    }\r\n    var KnownConv = parseText(xml, 'KnownConv');\r\n    if (KnownConv !== 'eConvApero_DistM2C') {\r\n        throw new Error(`Error parsing micmac orientation : unknown convention ${KnownConv}`);\r\n    }\r\n    var focal = parseVector2(xml, 'F'); // focal length in pixels\r\n    var point = parseVector2(xml, 'PP'); // image projection center in pixels\r\n    var size = parseVector2(xml, 'SzIm'); // image size in pixels\r\n    var skew = 0;\r\n    var rmax = parseNumbers(xml, 'RayonUtile', [])[0];\r\n    focal.y = focal.y || focal.x; // fy defaults to fx\r\n    var distos = Array.from(xml.getElementsByTagName('CalibDistortion'))\r\n        .map(parseDistortion)\r\n        .filter(x => x) // filter undefined values\r\n        .reverse(); // see the doc\r\n    var near = focal.x * 0.035 / size.x; // horizontal focal length in meters, assuming a 35mm-wide sensor\r\n    var far = 1000; // 1km\r\n    var camera = new PhotogrammetricCamera(focal, size, point, skew, distos, near, far, undefined, imageMatrix);\r\n    if (rmax) {\r\n        camera.r2max = rmax * rmax;\r\n    }\r\n    return camera;\r\n}\r\n\r\n// https://github.com/micmacIGN/micmac/blob/e0008b7a084f850aa9db4dc50374bd7ec6984da6/src/ori_phot/orilib.cpp#L3069-L3190\r\nfunction parseConv(xml) {\r\n    var KnownConv = parseText(xml, 'KnownConv');\r\n    if (!KnownConv) return undefined;\r\n    var degree = Math.PI / 180;\r\n    var grade = Math.PI / 200;\r\n    var lin = [1, 1, 1];\r\n    var Cardan = true;\r\n    switch (KnownConv) {\r\n        case 'eConvApero_DistM2C' : return { Cardan, lin, Video: true, DistC2M: false, MatrC2M: true, col: [1, 1, 1], scale: degree, order: 'ZYX' };\r\n        case 'eConvApero_DistC2M': return { Cardan, lin, Video: true, DistC2M: true, MatrC2M: true, col: [1, 1, 1], scale: degree, order: 'ZYX' };\r\n        case 'eConvOriLib': return { Cardan, lin, Video: true, DistC2M: false, MatrC2M: true, col: [1, 1, 1], scale: degree, order: 'XYZ' };\r\n        case 'eConvMatrPoivillier_E': return { Cardan, lin, Video: false, DistC2M: false, MatrC2M: false, col: [1, -1, -1], scale: degree, order: 'XYZ' };\r\n        case 'eConvAngErdas' : return { Cardan, lin, Video: true, DistC2M: false, MatrC2M: false, col: [1, -1, -1], scale: degree, order: 'XYZ' };\r\n        case 'eConvAngErdas_Grade': return { Cardan, lin, Video: true, DistC2M: false, MatrC2M: false, col: [1, -1, -1], scale: grade, order: 'XYZ' };\r\n        case 'eConvAngPhotoMDegre': return { Cardan, lin, Video: true, DistC2M: false, MatrC2M: true, col: [1, -1, -1], scale: degree, order: 'XYZ' };\r\n        case 'eConvAngPhotoMGrade': return { Cardan, lin, Video: true, DistC2M: false, MatrC2M: true, col: [1, -1, -1], scale: grade, order: 'XYZ' };\r\n        case 'eConvMatrixInpho': return { Cardan, lin, Video: true, DistC2M: false, MatrC2M: false, col: [1, -1, -1], scale: undefined, order: 'XYZ' };\r\n        case 'eConvAngLPSDegre': return { Cardan, lin, Video: true, DistC2M: false, MatrC2M: true, col: [1, -1, -1], scale: degree, order: 'YXZ' };\r\n        default: throw new Error(`Error parsing micmac orientation : unknown rotation convention : ${KnownConv}`);\r\n    }\r\n}\r\n\r\n// https://github.com/micmacIGN/micmac/blob/e0008b7a084f850aa9db4dc50374bd7ec6984da6/src/ori_phot/orilib.cpp#L4127-L4139\r\n// https://github.com/micmacIGN/micmac/blob/bee473615bec715884aaa639642add0812e8c378/src/uti_files/CPP_Ori_txt2Xml.cpp#L1546-L1600\r\nfunction parseExtrinsics(xml) {\r\n    var conv = xml.getElementsByTagName('ConvOri')[0];\r\n    xml = xml.getElementsByTagName('Externe')[0];\r\n    conv = parseConv(xml) || parseConv(conv);\r\n\r\n    var rotation = xml.getElementsByTagName('ParamRotation')[0];\r\n    var encoding = rotation && rotation.children[0] ? rotation.children[0].tagName : 'No or empty ParamRotation tag';\r\n    var M = new Matrix4();\r\n    switch (encoding) {\r\n        case 'CodageMatr':\r\n            var L1 = parseNumbers(rotation, 'L1');\r\n            var L2 = parseNumbers(rotation, 'L2');\r\n            var L3 = parseNumbers(rotation, 'L3');\r\n            M.set(\r\n                L1[0], L1[1], L1[2], 0,\r\n                L2[0], L2[1], L2[2], 0,\r\n                L3[0], L3[1], L3[2], 0,\r\n                0, 0, 0, 1);\r\n            break;\r\n\r\n        case 'CodageAngulaire':\r\n            console.warn('CodageAngulaire has never been tested');\r\n            var A = parseNumbers(rotation, 'CodageAngulaire').map(x => x * conv.scale);\r\n            var E = new Euler(A[0], A[1], A[2], conv.order);\r\n            M.makeRotationFromEuler(E);\r\n            break;\r\n\r\n        default:\r\n            throw new Error(`Error parsing micmac orientation, rotation encoding : ${encoding}`);\r\n    }\r\n    if (!conv.MatrC2M) M.transpose();\r\n    for (var i = 0; i < 3; ++i) {\r\n        for (var j = 0; j < 3; ++j) {\r\n            // it is one or the other (to be checked):\r\n            // M.elements[4*j+i] *= conv.col[i] * conv.lin[j];\r\n            M.elements[4 * j + i] *= conv.col[j] * conv.lin[i];\r\n        }\r\n    }\r\n\r\n    M.setPosition(parseVector3(xml, 'Centre'));\r\n\r\n    // go from photogrammetric convention (X right, Y down, Z front) to js conventions (X right, Y up, Z back)\r\n    M.scale(new Vector3(1, -1, -1));\r\n\r\n    return M;\r\n}\r\n\r\nfunction parseOrIntImaM2C(xml) {\r\n    xml = xml.getElementsByTagName('OrIntImaM2C')[0];\r\n    if (!xml) return null;\r\n    var C = parseVector2(xml, 'I00');\r\n    var X = parseVector2(xml, 'V10');\r\n    var Y = parseVector2(xml, 'V01');\r\n    if (C.x === 0 && C.y === 0 && X.x === 1 && X.y === 0 && Y.x === 0 && Y.y === 1) {\r\n        return undefined;\r\n    }\r\n    return new Matrix4().set(\r\n        X.x, Y.x, 0, C.x,\r\n        X.y, Y.y, 0, C.y,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1,\r\n    );\r\n}\r\n\r\nfunction parseCheck(xml) {\r\n    xml = xml.getElementsByTagName('Verif')[0];\r\n    if (!xml) return undefined;\r\n    function check(epsilon, N) {\r\n        epsilon = epsilon || this.check.epsilon;\r\n        var array = N ? this.check.points.slice(0, N) : this.check.points;\r\n        return array.reduce((ok, point) => {\r\n            var pp = this.distort(point.p3.clone());\r\n            var d = point.p2.distanceTo(pp);\r\n            if (d > epsilon) {\r\n                ok = false;\r\n                console.warn(point.id, d, pp, point.p2, point.p3);\r\n            }\r\n            return ok;\r\n        }, true);\r\n    }\r\n    check.epsilon = parseNumbers(xml, 'Tol')[0];\r\n    check.points = Array.from(xml.getElementsByTagName('Appuis')).map(point => ({\r\n        id: parseNumbers(point, 'Num')[0],\r\n        p2: parseVector2(point, 'Im'),\r\n        p3: parseVector3(point, 'Ter'),\r\n    }));\r\n    return check;\r\n}\r\n\r\nfunction parseOrientation(xml, name, intrinsics) {\r\n    var camera = parseIntrinsics(intrinsics, parseOrIntImaM2C(xml));\r\n    camera.name = name;\r\n    camera.matrix = parseExtrinsics(xml);\r\n    camera.matrix.decompose(camera.position, camera.quaternion, camera.scale);\r\n    camera.updateMatrixWorld(true);\r\n    camera.check = parseCheck(xml);\r\n    return camera;\r\n}\r\n\r\n\r\nexport default {\r\n    /** @module MicmacParser */\r\n    /** Parse an Orientation*.xml from Micmac (see {@link https://github.com/micmacIGN})\r\n     * @function parse\r\n     * @param {string|XMLDocument} xml - the xml content of the orientation file.\r\n     * @param {Source} source - source function ({@link FilesSource}, {@link FetchSource})\r\n     * @return {Promise} - a promise that resolves with a camera.\r\n     *\r\n     */\r\n    parse: function parse(xml, source, name) {\r\n        if (!(xml instanceof Node)) {\r\n            xml = new window.DOMParser().parseFromString(xml, 'text/xml');\r\n        }\r\n        const match = name.match(/Orientation-(.*)\\.[\\w\\d]*\\.xml/i);\r\n        if (match) name = match[1];\r\n\r\n        // sanity check for format\r\n        xml = xml.getElementsByTagName('OrientationConique')[0];\r\n        if (!xml) return undefined;\r\n\r\n        var file = parseText(xml, 'FileInterne');\r\n        var TypeProj = parseText(xml, 'TypeProj');\r\n        if (TypeProj !== 'eProjStenope') {\r\n            var error = new Error(`Error parsing micmac orientation : unknown projection type ${TypeProj}`);\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        if (file) {\r\n            return source.open(file, 'text').then(intrinsics => parseOrientation(xml, name, intrinsics));\r\n        } else {\r\n            var intrinsics = xml.getElementsByTagName('Interne')[0];\r\n            return Promise.resolve(parseOrientation(xml, name, intrinsics));\r\n        }\r\n    },\r\n    format: 'micmac/orientation',\r\n    extensions: ['xml'],\r\n    mimetypes: ['application/xml'],\r\n    fetchtype: 'xml',\r\n};\r\n","import { Vector3, Euler, Math } from 'three';\r\nimport PhotogrammetricCamera from '../cameras/PhotogrammetricCamera';\r\n\r\nexport default {\r\n    /** @module OPKParser */\r\n    /** Parse an orientation using the IGN internal XML format\r\n     * @function parse\r\n     * @param {string} text - the text content of the OPK file.\r\n     * @return {Camera[]} - an array of cameras.\r\n     *\r\n     */\r\n    parse: function parse(text, source, name) {\r\n        const lines = text.split(/\\n/);\r\n        const header = [\r\n          \"CHANTIER : \",\r\n          \"PROJECTION : \",\r\n          \"REFERENTIEL ALTIMETRIQUE : \",\r\n          \"UNITE ANGLE  : \",\r\n          \"NOM\tX\tY\tZ\tO\tP\tK\tCAMERA\"\r\n        ];\r\n        for(var l=0; l<header.length; ++l)\r\n        {\r\n          if(!lines[l].startsWith(header[l]))\r\n          {\r\n            // console.error(\"Error parsing OPT file line \",l,\" : \",lines[l],\" should start with \",header[l], source);\r\n            return null;\r\n          }\r\n        }\r\n        const chantier = lines[0].substr(header[0].length);\r\n        const projection = lines[1].substr(header[1].length); console.warn(\"projection not used \", projection);\r\n        const alti = lines[2].substr(header[2].length); console.warn(\"alti not used \", alti);\r\n        const angleInDegrees = lines[3].substr(header[3].length).trim() == \"degre\";\r\n        const cameras = [];\r\n\r\n        const euler = new Euler(0, 0, 0, 'XYZ');\r\n\r\n        for(var l=5;l<lines.length && lines[l].trim()!=\"\";++l)\r\n        {\r\n          const data = lines[l].split(/\\s+/);\r\n          const image = data[0];\r\n          const x = Number(data[1]);\r\n          const y = Number(data[2]);\r\n          const z = Number(data[3]);\r\n          var o = Number(data[4]);\r\n          var p = Number(data[5]);\r\n          var k = Number(data[6]);\r\n          const cam = source.cameras[data[7]].clone();\r\n          if(angleInDegrees) {\r\n            o = Math.degToRad(o);\r\n            p = Math.degToRad(p);\r\n            k = Math.degToRad(k);\r\n          }\r\n          euler.set(o, p, k);\r\n          cam.position.set(x, y, z);\r\n          cam.quaternion.setFromEuler(euler);\r\n          cam.name = image;\r\n          cam.near = 100;\r\n          cam.far = 10000;\r\n          cameras.push(cam);\r\n        }\r\n        return cameras;\r\n    },\r\n\r\n    parseXYZ(text, filename) {\r\n      const lines = text.split(/\\n/);\r\n      if(!lines[0].startsWith(\"ID\\tX\\tY\\tZ\\tMult\\tStrip\")) {\r\n        console.error(\"Error parsing XYZ file line 0\", lines[0], filename);\r\n        return null;\r\n      }\r\n      if(lines[lines.length-1].trim() == \"\") lines.length = lines.length -1;\r\n      const n = lines.length -1\r\n      const position = new Float32Array(3*n);\r\n      const multi =  new Uint16Array(n);\r\n      const strip =  new Uint16Array(n);\r\n      const name = [];\r\n      for(var l=0; l<n; ++l) {\r\n        const data = lines[1+l].split(/\\s+/);\r\n        name[l] = data[0];\r\n        position[3*l+0] = Number(data[1]);\r\n        position[3*l+1] = Number(data[2]);\r\n        position[3*l+2] = Number(data[3]);\r\n        multi[l] = Number(data[4]);\r\n        strip[l] = Number(data[5]);\r\n      }\r\n      return {size : n, position, multi, strip, name};\r\n    },\r\n\r\n    parseMES(text, filename) {\r\n      const lines = text.split(/\\n/);\r\n      if(lines[0].trim() !== \"\") {\r\n        console.error(\"Error parsing MES file line 0\", filename);\r\n        return null;\r\n      }\r\n      if(lines[lines.length-1].trim() == \"\") lines.length = lines.length -1;\r\n      const n = lines.length -1\r\n      const position = new Float32Array(2*n);\r\n      const name = [];\r\n      const image = [];\r\n      for(var l=0; l<n; ++l) {\r\n        const data = lines[1+l].split(/\\s+/);\r\n        name[l] = data[0];\r\n        image[l] = data[1];\r\n        position[2*l+0] = Number(data[2]);\r\n        position[2*l+1] = Number(data[3]);\r\n      }\r\n      return {size : n, position, name, image};\r\n    },\r\n\r\n    format: 'OPK/orientation',\r\n    extensions: ['opk'],\r\n    mimetypes: ['application/text'],\r\n    fetchtype: 'text',\r\n};\r\n","export default {\r\n    /** @module GeoJSONSerializer */\r\n\r\n    /** Parse an orientation using a GEOJSON format\r\n     * @function serializeFeature\r\n     * @param {JSON} feature - a GEOJSON point feature encoding a camera.\r\n     * @return {Camera} - the decoded camera.\r\n     *\r\n     */\r\n    serializeFeature: function serializeFeature(camera, crsName) {\r\n      const disto = camera.distos ? camera.distos[0] : {};\r\n      const elements = camera.imageMatrix.elements;\r\n\r\n      // crsName\r\n      // todo  (using crsName?)\r\n      const epsg = '4978';\r\n      const epsgquaternion = '4978'; // same as epsg ?\r\n      const source = '0';\r\n\r\n      const feature = {\r\n        type: 'Feature',\r\n        geometry : {\r\n          type: 'Point',\r\n          coordinates : [\r\n            camera.position.x,\r\n            camera.position.y,\r\n            camera.position.z\r\n          ]\r\n        },\r\n        properties : {\r\n          name: camera.name,\r\n          epsgquaternion: epsgquaternion,\r\n          source: source,\r\n          fx: camera.focal.x,\r\n          fy: camera.focal.y,\r\n          sx: camera.view.fullWidth,\r\n          sy: camera.view.fullHeight,\r\n          px: camera.point.x,\r\n          py: camera.point.y,\r\n          cx: disto.C.x,\r\n          cy: disto.C.y,\r\n          c3: disto.R.x,\r\n          c5: disto.R.y,\r\n          c7: disto.R.z,\r\n          cm: disto.R.w,\r\n          m00: elements[ 0],\r\n          m01: elements[ 1],\r\n          m10: elements[ 4],\r\n          m11: elements[ 5],\r\n          m20: elements[12],\r\n          m21: elements[13],\r\n          qx:camera.quaternion.x,\r\n          qy:camera.quaternion.y,\r\n          qz:camera.quaternion.z,\r\n          qw:camera.quaternion.w\r\n        }\r\n      };\r\n\r\n      return feature;\r\n    },\r\n\r\n    serialize(cameras, crsName) {\r\n      if (cameras.children) cameras = cameras.children;\r\n      const features = cameras.map(cam => this.serializeFeature(cam, crsName));\r\n      const geojson = {\r\n        type: 'FeatureCollection',\r\n        features: features,\r\n        crs: {\r\n          type:'name',\r\n          properties: { name: crsName }\r\n        }\r\n      };\r\n      return JSON.stringify(geojson);\r\n    }\r\n};\r\n","export default {\r\n    /** @module GMLSerializer */\r\n\r\n    /** Serialize a camera using a GML format\r\n     * @function serialize\r\n     * @param {Camera} camera - the input camera.\r\n     * @return {string} - a GML point encoding of the camera.\r\n     *\r\n     */\r\n    serialize: function serializeFeature(camera, crsName) {\r\n        const d = camera.distos ? camera.distos[0] : {};\r\n        const e = camera.imageMatrix.elements;\r\n        const pos = camera.position;\r\n        const f = camera.focal;\r\n        const v = camera.view;\r\n        const p = camera.point;\r\n        const q = camera.quaternion;\r\n\r\n        // todo  (using crsName?)\r\n        const epsg = '4978';\r\n        const epsgquaternion = '4978'; // same as epsg ?\r\n        const source = '0';\r\n\r\n        const gml = `\\\r\n<point>\r\n  <gml:Point srsName=\"http://www.opengis.net/gml/srs/epsg.xml#${epsg}\">\r\n    <gml:coordinates xmlns:gml=\"http://www.opengis.net/gml\" decimal=\".\" cs=\",\" ts=\" \">${pos.x},${pos.y},${pos.z}</gml:coordinates>\r\n  </gml:Point>\r\n</point>\r\n<name>${camera.name}</name>\r\n<source>${source}</source>\r\n<epsgquaternion>${epsgquaternion}</epsgquaternion>\r\n<qx>${q.x}</qx>\r\n<qy>${q.y}</qy>\r\n<qz>${q.z}</qz>\r\n<qw>${q.w}</qw>\r\n<fx>${f.x}</fx>\r\n<fy>${f.y}</fy>\r\n<px>${p.x}</px>\r\n<py>${p.y}</py>\r\n<sk>0.0</sk>\r\n<sx>${v.fullWidth}</sx>\r\n<sy>${v.fullHeight}</sy>\r\n<c3>${d.R.x}</c3>\r\n<c5>${d.R.y}</c5>\r\n<c7>${d.R.z}</c7>\r\n<cm>${d.R.w}</cm>\r\n<cx>${d.C.x}</cx>\r\n<cy>${d.C.y}</cy>\r\n<m00>${e[ 0]}</m00>\r\n<m01>${e[ 1]}</m01>\r\n<m10>${e[ 4]}</m10>\r\n<m11>${e[ 5]}</m11>\r\n<m20>${e[12]}</m20>\r\n<m21>${e[13]}</m21>`;\r\n\r\n      return gml;\r\n    }\r\n};\r\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseDown( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseMove( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseUp( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\t// Prevent the browser from scrolling.\n\t\t\tevent.preventDefault();\n\n\t\t\t// Manually set the focus since calling preventDefault above\n\t\t\t// prevents the browser from setting it automatically.\n\n\t\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tscope.domElement.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","import {\n\tMathUtils,\n\tSpherical,\n\tVector3\n} from 'three';\n\nconst _lookDirection = new Vector3();\nconst _spherical = new Spherical();\nconst _target = new Vector3();\n\nclass FirstPersonControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tif ( domElement === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.FirstPersonControls: The second parameter \"domElement\" is now mandatory.' );\n\t\t\tdomElement = document;\n\n\t\t}\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\t// API\n\n\t\tthis.enabled = true;\n\n\t\tthis.movementSpeed = 1.0;\n\t\tthis.lookSpeed = 0.005;\n\n\t\tthis.lookVertical = true;\n\t\tthis.autoForward = false;\n\n\t\tthis.activeLook = true;\n\n\t\tthis.heightSpeed = false;\n\t\tthis.heightCoef = 1.0;\n\t\tthis.heightMin = 0.0;\n\t\tthis.heightMax = 1.0;\n\n\t\tthis.constrainVertical = false;\n\t\tthis.verticalMin = 0;\n\t\tthis.verticalMax = Math.PI;\n\n\t\tthis.mouseDragOn = false;\n\n\t\t// internals\n\n\t\tthis.autoSpeedFactor = 0.0;\n\n\t\tthis.mouseX = 0;\n\t\tthis.mouseY = 0;\n\n\t\tthis.moveForward = false;\n\t\tthis.moveBackward = false;\n\t\tthis.moveLeft = false;\n\t\tthis.moveRight = false;\n\n\t\tthis.viewHalfX = 0;\n\t\tthis.viewHalfY = 0;\n\n\t\t// private variables\n\n\t\tlet lat = 0;\n\t\tlet lon = 0;\n\n\t\t//\n\n\t\tthis.handleResize = function () {\n\n\t\t\tif ( this.domElement === document ) {\n\n\t\t\t\tthis.viewHalfX = window.innerWidth / 2;\n\t\t\t\tthis.viewHalfY = window.innerHeight / 2;\n\n\t\t\t} else {\n\n\t\t\t\tthis.viewHalfX = this.domElement.offsetWidth / 2;\n\t\t\t\tthis.viewHalfY = this.domElement.offsetHeight / 2;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.onMouseDown = function ( event ) {\n\n\t\t\tif ( this.domElement !== document ) {\n\n\t\t\t\tthis.domElement.focus();\n\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( this.activeLook ) {\n\n\t\t\t\tswitch ( event.button ) {\n\n\t\t\t\t\tcase 0: this.moveForward = true; break;\n\t\t\t\t\tcase 2: this.moveBackward = true; break;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.mouseDragOn = true;\n\n\t\t};\n\n\t\tthis.onMouseUp = function ( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( this.activeLook ) {\n\n\t\t\t\tswitch ( event.button ) {\n\n\t\t\t\t\tcase 0: this.moveForward = false; break;\n\t\t\t\t\tcase 2: this.moveBackward = false; break;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.mouseDragOn = false;\n\n\t\t};\n\n\t\tthis.onMouseMove = function ( event ) {\n\n\t\t\tif ( this.domElement === document ) {\n\n\t\t\t\tthis.mouseX = event.pageX - this.viewHalfX;\n\t\t\t\tthis.mouseY = event.pageY - this.viewHalfY;\n\n\t\t\t} else {\n\n\t\t\t\tthis.mouseX = event.pageX - this.domElement.offsetLeft - this.viewHalfX;\n\t\t\t\tthis.mouseY = event.pageY - this.domElement.offsetTop - this.viewHalfY;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.onKeyDown = function ( event ) {\n\n\t\t\t//event.preventDefault();\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase 'ArrowUp':\n\t\t\t\tcase 'KeyW': this.moveForward = true; break;\n\n\t\t\t\tcase 'ArrowLeft':\n\t\t\t\tcase 'KeyA': this.moveLeft = true; break;\n\n\t\t\t\tcase 'ArrowDown':\n\t\t\t\tcase 'KeyS': this.moveBackward = true; break;\n\n\t\t\t\tcase 'ArrowRight':\n\t\t\t\tcase 'KeyD': this.moveRight = true; break;\n\n\t\t\t\tcase 'KeyR': this.moveUp = true; break;\n\t\t\t\tcase 'KeyF': this.moveDown = true; break;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.onKeyUp = function ( event ) {\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase 'ArrowUp':\n\t\t\t\tcase 'KeyW': this.moveForward = false; break;\n\n\t\t\t\tcase 'ArrowLeft':\n\t\t\t\tcase 'KeyA': this.moveLeft = false; break;\n\n\t\t\t\tcase 'ArrowDown':\n\t\t\t\tcase 'KeyS': this.moveBackward = false; break;\n\n\t\t\t\tcase 'ArrowRight':\n\t\t\t\tcase 'KeyD': this.moveRight = false; break;\n\n\t\t\t\tcase 'KeyR': this.moveUp = false; break;\n\t\t\t\tcase 'KeyF': this.moveDown = false; break;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.lookAt = function ( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\t_target.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\t_target.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tthis.object.lookAt( _target );\n\n\t\t\tsetOrientation( this );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.update = function () {\n\n\t\t\tconst targetPosition = new Vector3();\n\n\t\t\treturn function update( delta ) {\n\n\t\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t\tif ( this.heightSpeed ) {\n\n\t\t\t\t\tconst y = MathUtils.clamp( this.object.position.y, this.heightMin, this.heightMax );\n\t\t\t\t\tconst heightDelta = y - this.heightMin;\n\n\t\t\t\t\tthis.autoSpeedFactor = delta * ( heightDelta * this.heightCoef );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.autoSpeedFactor = 0.0;\n\n\t\t\t\t}\n\n\t\t\t\tconst actualMoveSpeed = delta * this.movementSpeed;\n\n\t\t\t\tif ( this.moveForward || ( this.autoForward && ! this.moveBackward ) ) this.object.translateZ( - ( actualMoveSpeed + this.autoSpeedFactor ) );\n\t\t\t\tif ( this.moveBackward ) this.object.translateZ( actualMoveSpeed );\n\n\t\t\t\tif ( this.moveLeft ) this.object.translateX( - actualMoveSpeed );\n\t\t\t\tif ( this.moveRight ) this.object.translateX( actualMoveSpeed );\n\n\t\t\t\tif ( this.moveUp ) this.object.translateY( actualMoveSpeed );\n\t\t\t\tif ( this.moveDown ) this.object.translateY( - actualMoveSpeed );\n\n\t\t\t\tlet actualLookSpeed = delta * this.lookSpeed;\n\n\t\t\t\tif ( ! this.activeLook ) {\n\n\t\t\t\t\tactualLookSpeed = 0;\n\n\t\t\t\t}\n\n\t\t\t\tlet verticalLookRatio = 1;\n\n\t\t\t\tif ( this.constrainVertical ) {\n\n\t\t\t\t\tverticalLookRatio = Math.PI / ( this.verticalMax - this.verticalMin );\n\n\t\t\t\t}\n\n\t\t\t\tlon -= this.mouseX * actualLookSpeed;\n\t\t\t\tif ( this.lookVertical ) lat -= this.mouseY * actualLookSpeed * verticalLookRatio;\n\n\t\t\t\tlat = Math.max( - 85, Math.min( 85, lat ) );\n\n\t\t\t\tlet phi = MathUtils.degToRad( 90 - lat );\n\t\t\t\tconst theta = MathUtils.degToRad( lon );\n\n\t\t\t\tif ( this.constrainVertical ) {\n\n\t\t\t\t\tphi = MathUtils.mapLinear( phi, 0, Math.PI, this.verticalMin, this.verticalMax );\n\n\t\t\t\t}\n\n\t\t\t\tconst position = this.object.position;\n\n\t\t\t\ttargetPosition.setFromSphericalCoords( 1, phi, theta ).add( position );\n\n\t\t\t\tthis.object.lookAt( targetPosition );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu );\n\t\t\tthis.domElement.removeEventListener( 'mousedown', _onMouseDown );\n\t\t\tthis.domElement.removeEventListener( 'mousemove', _onMouseMove );\n\t\t\tthis.domElement.removeEventListener( 'mouseup', _onMouseUp );\n\n\t\t\twindow.removeEventListener( 'keydown', _onKeyDown );\n\t\t\twindow.removeEventListener( 'keyup', _onKeyUp );\n\n\t\t};\n\n\t\tconst _onMouseMove = this.onMouseMove.bind( this );\n\t\tconst _onMouseDown = this.onMouseDown.bind( this );\n\t\tconst _onMouseUp = this.onMouseUp.bind( this );\n\t\tconst _onKeyDown = this.onKeyDown.bind( this );\n\t\tconst _onKeyUp = this.onKeyUp.bind( this );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu );\n\t\tthis.domElement.addEventListener( 'mousemove', _onMouseMove );\n\t\tthis.domElement.addEventListener( 'mousedown', _onMouseDown );\n\t\tthis.domElement.addEventListener( 'mouseup', _onMouseUp );\n\n\t\twindow.addEventListener( 'keydown', _onKeyDown );\n\t\twindow.addEventListener( 'keyup', _onKeyUp );\n\n\t\tfunction setOrientation( controls ) {\n\n\t\t\tconst quaternion = controls.object.quaternion;\n\n\t\t\t_lookDirection.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\t\t\t_spherical.setFromVector3( _lookDirection );\n\n\t\t\tlat = 90 - MathUtils.radToDeg( _spherical.phi );\n\t\t\tlon = MathUtils.radToDeg( _spherical.theta );\n\n\t\t}\n\n\t\tthis.handleResize();\n\n\t\tsetOrientation( this );\n\n\t}\n\n}\n\nfunction contextmenu( event ) {\n\n\tevent.preventDefault();\n\n}\n\nexport { FirstPersonControls };\n","import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader,\n\tLoaderUtils\n} from 'three';\n\n/**\n * Description: A THREE loader for PLY ASCII files (known as the Polygon\n * File Format or the Stanford Triangle Format).\n *\n * Limitations: ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *\tconst loader = new PLYLoader();\n *\tloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n *\n *\t\tscene.add( new THREE.Mesh( geometry ) );\n *\n *\t} );\n *\n * If the PLY file uses non standard property names, they can be mapped while\n * loading. For example, the following maps the properties\n * “diffuse_(red|green|blue)” in the file to standard color names.\n *\n * loader.setPropertyNameMapping( {\n *\tdiffuse_red: 'red',\n *\tdiffuse_green: 'green',\n *\tdiffuse_blue: 'blue'\n * } );\n *\n */\n\n\nclass PLYLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.propertyNameMapping = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetPropertyNameMapping( mapping ) {\n\n\t\tthis.propertyNameMapping = mapping;\n\n\t}\n\n\tparse( data ) {\n\n\t\tfunction parseHeader( data ) {\n\n\t\t\tconst patternHeader = /ply([\\s\\S]*)end_header\\r?\\n/;\n\t\t\tlet headerText = '';\n\t\t\tlet headerLength = 0;\n\t\t\tconst result = patternHeader.exec( data );\n\n\t\t\tif ( result !== null ) {\n\n\t\t\t\theaderText = result[ 1 ];\n\t\t\t\theaderLength = new Blob( [ result[ 0 ] ] ).size;\n\n\t\t\t}\n\n\t\t\tconst header = {\n\t\t\t\tcomments: [],\n\t\t\t\telements: [],\n\t\t\t\theaderLength: headerLength,\n\t\t\t\tobjInfo: ''\n\t\t\t};\n\n\t\t\tconst lines = headerText.split( '\\n' );\n\t\t\tlet currentElement;\n\n\t\t\tfunction make_ply_element_property( propertValues, propertyNameMapping ) {\n\n\t\t\t\tconst property = { type: propertValues[ 0 ] };\n\n\t\t\t\tif ( property.type === 'list' ) {\n\n\t\t\t\t\tproperty.name = propertValues[ 3 ];\n\t\t\t\t\tproperty.countType = propertValues[ 1 ];\n\t\t\t\t\tproperty.itemType = propertValues[ 2 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tproperty.name = propertValues[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( property.name in propertyNameMapping ) {\n\n\t\t\t\t\tproperty.name = propertyNameMapping[ property.name ];\n\n\t\t\t\t}\n\n\t\t\t\treturn property;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tlet line = lines[ i ];\n\t\t\t\tline = line.trim();\n\n\t\t\t\tif ( line === '' ) continue;\n\n\t\t\t\tconst lineValues = line.split( /\\s+/ );\n\t\t\t\tconst lineType = lineValues.shift();\n\t\t\t\tline = lineValues.join( ' ' );\n\n\t\t\t\tswitch ( lineType ) {\n\n\t\t\t\t\tcase 'format':\n\n\t\t\t\t\t\theader.format = lineValues[ 0 ];\n\t\t\t\t\t\theader.version = lineValues[ 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'comment':\n\n\t\t\t\t\t\theader.comments.push( line );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'element':\n\n\t\t\t\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentElement = {};\n\t\t\t\t\t\tcurrentElement.name = lineValues[ 0 ];\n\t\t\t\t\t\tcurrentElement.count = parseInt( lineValues[ 1 ] );\n\t\t\t\t\t\tcurrentElement.properties = [];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'property':\n\n\t\t\t\t\t\tcurrentElement.properties.push( make_ply_element_property( lineValues, scope.propertyNameMapping ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'obj_info':\n\n\t\t\t\t\t\theader.objInfo = line;\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.log( 'unhandled', lineType, lineValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t}\n\n\t\t\treturn header;\n\n\t\t}\n\n\t\tfunction parseASCIINumber( n, type ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\n\t\t\t\tcase 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\n\n\t\t\t\t\treturn parseInt( n );\n\n\t\t\t\tcase 'float': case 'double': case 'float32': case 'float64':\n\n\t\t\t\t\treturn parseFloat( n );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseASCIIElement( properties, line ) {\n\n\t\t\tconst values = line.split( /\\s+/ );\n\n\t\t\tconst element = {};\n\n\t\t\tfor ( let i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\n\n\t\t\t\t\tconst list = [];\n\t\t\t\t\tconst n = parseASCIINumber( values.shift(), properties[ i ].countType );\n\n\t\t\t\t\tfor ( let j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tlist.push( parseASCIINumber( values.shift(), properties[ i ].itemType ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ properties[ i ].name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\telement[ properties[ i ].name ] = parseASCIINumber( values.shift(), properties[ i ].type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn element;\n\n\t\t}\n\n\t\tfunction parseASCII( data, header ) {\n\n\t\t\t// PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n\t\t\tconst buffer = {\n\t\t\t\tindices: [],\n\t\t\t\tvertices: [],\n\t\t\t\tnormals: [],\n\t\t\t\tuvs: [],\n\t\t\t\tfaceVertexUvs: [],\n\t\t\t\tcolors: []\n\t\t\t};\n\n\t\t\tlet result;\n\n\t\t\tconst patternBody = /end_header\\s([\\s\\S]*)$/;\n\t\t\tlet body = '';\n\t\t\tif ( ( result = patternBody.exec( data ) ) !== null ) {\n\n\t\t\t\tbody = result[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst lines = body.split( '\\n' );\n\t\t\tlet currentElement = 0;\n\t\t\tlet currentElementCount = 0;\n\n\t\t\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tlet line = lines[ i ];\n\t\t\t\tline = line.trim();\n\t\t\t\tif ( line === '' ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentElementCount >= header.elements[ currentElement ].count ) {\n\n\t\t\t\t\tcurrentElement ++;\n\t\t\t\t\tcurrentElementCount = 0;\n\n\t\t\t\t}\n\n\t\t\t\tconst element = parseASCIIElement( header.elements[ currentElement ].properties, line );\n\n\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\n\n\t\t\t\tcurrentElementCount ++;\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\tfunction postProcess( buffer ) {\n\n\t\t\tlet geometry = new BufferGeometry();\n\n\t\t\t// mandatory buffer data\n\n\t\t\tif ( buffer.indices.length > 0 ) {\n\n\t\t\t\tgeometry.setIndex( buffer.indices );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( buffer.vertices, 3 ) );\n\n\t\t\t// optional buffer data\n\n\t\t\tif ( buffer.normals.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( buffer.normals, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.uvs.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.uvs, 2 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.colors.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( buffer.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.faceVertexUvs.length > 0 ) {\n\n\t\t\t\tgeometry = geometry.toNonIndexed();\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.faceVertexUvs, 2 ) );\n\n\t\t\t}\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction handleElement( buffer, elementName, element ) {\n\n\t\t\tif ( elementName === 'vertex' ) {\n\n\t\t\t\tbuffer.vertices.push( element.x, element.y, element.z );\n\n\t\t\t\tif ( 'nx' in element && 'ny' in element && 'nz' in element ) {\n\n\t\t\t\t\tbuffer.normals.push( element.nx, element.ny, element.nz );\n\n\t\t\t\t}\n\n\t\t\t\tif ( 's' in element && 't' in element ) {\n\n\t\t\t\t\tbuffer.uvs.push( element.s, element.t );\n\n\t\t\t\t}\n\n\t\t\t\tif ( 'red' in element && 'green' in element && 'blue' in element ) {\n\n\t\t\t\t\tbuffer.colors.push( element.red / 255.0, element.green / 255.0, element.blue / 255.0 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( elementName === 'face' ) {\n\n\t\t\t\tconst vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\n\t\t\t\tconst texcoord = element.texcoord;\n\n\t\t\t\tif ( vertex_indices.length === 3 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 2 ] );\n\n\t\t\t\t\tif ( texcoord && texcoord.length === 6 ) {\n\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 0 ], texcoord[ 1 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 2 ], texcoord[ 3 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 4 ], texcoord[ 5 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( vertex_indices.length === 4 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 3 ] );\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 1 ], vertex_indices[ 2 ], vertex_indices[ 3 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction binaryRead( dataview, at, type, little_endian ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\t// corespondences for non-specific length types here match rply:\n\t\t\t\tcase 'int8':\t\tcase 'char':\t return [ dataview.getInt8( at ), 1 ];\n\t\t\t\tcase 'uint8':\t\tcase 'uchar':\t return [ dataview.getUint8( at ), 1 ];\n\t\t\t\tcase 'int16':\t\tcase 'short':\t return [ dataview.getInt16( at, little_endian ), 2 ];\n\t\t\t\tcase 'uint16':\tcase 'ushort': return [ dataview.getUint16( at, little_endian ), 2 ];\n\t\t\t\tcase 'int32':\t\tcase 'int':\t\t return [ dataview.getInt32( at, little_endian ), 4 ];\n\t\t\t\tcase 'uint32':\tcase 'uint':\t return [ dataview.getUint32( at, little_endian ), 4 ];\n\t\t\t\tcase 'float32': case 'float':\t return [ dataview.getFloat32( at, little_endian ), 4 ];\n\t\t\t\tcase 'float64': case 'double': return [ dataview.getFloat64( at, little_endian ), 8 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction binaryReadElement( dataview, at, properties, little_endian ) {\n\n\t\t\tconst element = {};\n\t\t\tlet result, read = 0;\n\n\t\t\tfor ( let i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\n\n\t\t\t\t\tconst list = [];\n\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].countType, little_endian );\n\t\t\t\t\tconst n = result[ 0 ];\n\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t\tfor ( let j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].itemType, little_endian );\n\t\t\t\t\t\tlist.push( result[ 0 ] );\n\t\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ properties[ i ].name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].type, little_endian );\n\t\t\t\t\telement[ properties[ i ].name ] = result[ 0 ];\n\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn [ element, read ];\n\n\t\t}\n\n\t\tfunction parseBinary( data, header ) {\n\n\t\t\tconst buffer = {\n\t\t\t\tindices: [],\n\t\t\t\tvertices: [],\n\t\t\t\tnormals: [],\n\t\t\t\tuvs: [],\n\t\t\t\tfaceVertexUvs: [],\n\t\t\t\tcolors: []\n\t\t\t};\n\n\t\t\tconst little_endian = ( header.format === 'binary_little_endian' );\n\t\t\tconst body = new DataView( data, header.headerLength );\n\t\t\tlet result, loc = 0;\n\n\t\t\tfor ( let currentElement = 0; currentElement < header.elements.length; currentElement ++ ) {\n\n\t\t\t\tfor ( let currentElementCount = 0; currentElementCount < header.elements[ currentElement ].count; currentElementCount ++ ) {\n\n\t\t\t\t\tresult = binaryReadElement( body, loc, header.elements[ currentElement ].properties, little_endian );\n\t\t\t\t\tloc += result[ 1 ];\n\t\t\t\t\tconst element = result[ 0 ];\n\n\t\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\t//\n\n\t\tlet geometry;\n\t\tconst scope = this;\n\n\t\tif ( data instanceof ArrayBuffer ) {\n\n\t\t\tconst text = LoaderUtils.decodeText( new Uint8Array( data ) );\n\t\t\tconst header = parseHeader( text );\n\n\t\t\tgeometry = header.format === 'ascii' ? parseASCII( text, header ) : parseBinary( data, header );\n\n\t\t} else {\n\n\t\t\tgeometry = parseASCII( data, parseHeader( data ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nexport { PLYLoader };\n","/**\n * Full-screen textured quad shader\n */\n\nvar CopyShader = {\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'opacity': { value: 1.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\t\t}`\n\n};\n\nexport { CopyShader };\n","import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tOrthographicCamera,\n\tMesh\n} from 'three';\n\nclass Pass {\n\n\tconstructor() {\n\n\t\t// if set to true, the pass is processed by the composer\n\t\tthis.enabled = true;\n\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\t\tthis.needsSwap = true;\n\n\t\t// if set to true, the pass clears its buffer before rendering\n\t\tthis.clear = false;\n\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\t\tthis.renderToScreen = false;\n\n\t}\n\n\tsetSize( /* width, height */ ) {}\n\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n}\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nconst _geometry = new BufferGeometry();\n_geometry.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n_geometry.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\nclass FullScreenQuad {\n\n\tconstructor( material ) {\n\n\t\tthis._mesh = new Mesh( _geometry, material );\n\n\t}\n\n\tdispose() {\n\n\t\tthis._mesh.geometry.dispose();\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this._mesh, _camera );\n\n\t}\n\n\tget material() {\n\n\t\treturn this._mesh.material;\n\n\t}\n\n\tset material( value ) {\n\n\t\tthis._mesh.material = value;\n\n\t}\n\n}\n\nexport { Pass, FullScreenQuad };\n","import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from '../postprocessing/Pass.js';\n\nclass ShaderPass extends Pass {\n\n\tconstructor( shader, textureID ) {\n\n\t\tsuper();\n\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : 'tDiffuse';\n\n\t\tif ( shader instanceof ShaderMaterial ) {\n\n\t\t\tthis.uniforms = shader.uniforms;\n\n\t\t\tthis.material = shader;\n\n\t\t} else if ( shader ) {\n\n\t\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\tthis.material = new ShaderMaterial( {\n\n\t\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\t\tuniforms: this.uniforms,\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n}\n\nexport { ShaderPass };\n","import { Pass } from '../postprocessing/Pass.js';\n\nclass MaskPass extends Pass {\n\n\tconstructor( scene, camera ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\n\t\tthis.inverse = false;\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst context = renderer.getContext();\n\t\tconst state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tlet writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n}\n\nclass ClearMaskPass extends Pass {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.needsSwap = false;\n\n\t}\n\n\trender( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n}\n\nexport { MaskPass, ClearMaskPass };\n","import {\n\tBufferGeometry,\n\tClock,\n\tFloat32BufferAttribute,\n\tLinearFilter,\n\tMesh,\n\tOrthographicCamera,\n\tRGBAFormat,\n\tVector2,\n\tWebGLRenderTarget\n} from 'three';\nimport { CopyShader } from '../shaders/CopyShader.js';\nimport { ShaderPass } from '../postprocessing/ShaderPass.js';\nimport { MaskPass } from '../postprocessing/MaskPass.js';\nimport { ClearMaskPass } from '../postprocessing/MaskPass.js';\n\nclass EffectComposer {\n\n\tconstructor( renderer, renderTarget ) {\n\n\t\tthis.renderer = renderer;\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst parameters = {\n\t\t\t\tminFilter: LinearFilter,\n\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\tformat: RGBAFormat\n\t\t\t};\n\n\t\t\tconst size = renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\n\t\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t\t} else {\n\n\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._width = renderTarget.width;\n\t\t\tthis._height = renderTarget.height;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\t\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tthis.renderToScreen = true;\n\n\t\tthis.passes = [];\n\n\t\t// dependencies\n\n\t\tif ( CopyShader === undefined ) {\n\n\t\t\tconsole.error( 'THREE.EffectComposer relies on CopyShader' );\n\n\t\t}\n\n\t\tif ( ShaderPass === undefined ) {\n\n\t\t\tconsole.error( 'THREE.EffectComposer relies on ShaderPass' );\n\n\t\t}\n\n\t\tthis.copyPass = new ShaderPass( CopyShader );\n\n\t\tthis.clock = new Clock();\n\n\t}\n\n\tswapBuffers() {\n\n\t\tconst tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t}\n\n\taddPass( pass ) {\n\n\t\tthis.passes.push( pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\tinsertPass( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\tremovePass( pass ) {\n\n\t\tconst index = this.passes.indexOf( pass );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tthis.passes.splice( index, 1 );\n\n\t\t}\n\n\t}\n\n\tisLastEnabledPass( passIndex ) {\n\n\t\tfor ( let i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\trender( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tconst currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tlet maskActive = false;\n\n\t\tfor ( let i = 0, il = this.passes.length; i < il; i ++ ) {\n\n\t\t\tconst pass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tconst context = this.renderer.getContext();\n\t\t\t\t\tconst stencil = this.renderer.state.buffers.stencil;\n\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\treset( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst size = this.renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tconst effectiveWidth = this._width * this._pixelRatio;\n\t\tconst effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( let i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t}\n\n\tsetPixelRatio( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n}\n\n\nclass Pass {\n\n\tconstructor() {\n\n\t\t// if set to true, the pass is processed by the composer\n\t\tthis.enabled = true;\n\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\t\tthis.needsSwap = true;\n\n\t\t// if set to true, the pass clears its buffer before rendering\n\t\tthis.clear = false;\n\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\t\tthis.renderToScreen = false;\n\n\t}\n\n\tsetSize( /* width, height */ ) {}\n\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n}\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nconst _geometry = new BufferGeometry();\n_geometry.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n_geometry.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\nclass FullScreenQuad {\n\n\tconstructor( material ) {\n\n\t\tthis._mesh = new Mesh( _geometry, material );\n\n\t}\n\n\tdispose() {\n\n\t\tthis._mesh.geometry.dispose();\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this._mesh, _camera );\n\n\t}\n\n\tget material() {\n\n\t\treturn this._mesh.material;\n\n\t}\n\n\tset material( value ) {\n\n\t\tthis._mesh.material = value;\n\n\t}\n\n}\n\nexport { EffectComposer, Pass, FullScreenQuad };\n","import {\n\tColor\n} from 'three';\nimport { Pass } from '../postprocessing/Pass.js';\n\nclass RenderPass extends Pass {\n\n\tconstructor( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.overrideMaterial = overrideMaterial;\n\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\t\tthis.clear = true;\n\t\tthis.clearDepth = false;\n\t\tthis.needsSwap = false;\n\t\tthis._oldClearColor = new Color();\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tlet oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.getClearColor( this._oldClearColor );\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this._oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n}\n\nexport { RenderPass };\n","class WEBGL {\n\n\tstatic isWebGLAvailable() {\n\n\t\ttry {\n\n\t\t\tconst canvas = document.createElement( 'canvas' );\n\t\t\treturn !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) );\n\n\t\t} catch ( e ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\tstatic isWebGL2Available() {\n\n\t\ttry {\n\n\t\t\tconst canvas = document.createElement( 'canvas' );\n\t\t\treturn !! ( window.WebGL2RenderingContext && canvas.getContext( 'webgl2' ) );\n\n\t\t} catch ( e ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\tstatic getWebGLErrorMessage() {\n\n\t\treturn this.getErrorMessage( 1 );\n\n\t}\n\n\tstatic getWebGL2ErrorMessage() {\n\n\t\treturn this.getErrorMessage( 2 );\n\n\t}\n\n\tstatic getErrorMessage( version ) {\n\n\t\tconst names = {\n\t\t\t1: 'WebGL',\n\t\t\t2: 'WebGL 2'\n\t\t};\n\n\t\tconst contexts = {\n\t\t\t1: window.WebGLRenderingContext,\n\t\t\t2: window.WebGL2RenderingContext\n\t\t};\n\n\t\tlet message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n\t\tconst element = document.createElement( 'div' );\n\t\telement.id = 'webglmessage';\n\t\telement.style.fontFamily = 'monospace';\n\t\telement.style.fontSize = '13px';\n\t\telement.style.fontWeight = 'normal';\n\t\telement.style.textAlign = 'center';\n\t\telement.style.background = '#fff';\n\t\telement.style.color = '#000';\n\t\telement.style.padding = '1.5em';\n\t\telement.style.width = '400px';\n\t\telement.style.margin = '5em auto 0';\n\n\t\tif ( contexts[ version ] ) {\n\n\t\t\tmessage = message.replace( '$0', 'graphics card' );\n\n\t\t} else {\n\n\t\t\tmessage = message.replace( '$0', 'browser' );\n\n\t\t}\n\n\t\tmessage = message.replace( '$1', names[ version ] );\n\n\t\telement.innerHTML = message;\n\n\t\treturn element;\n\n\t}\n\n}\n\nexport { WEBGL };\n","function decode(file, type) {\r\n    return new Promise((resolve, reject) => {\r\n        var fr = new FileReader();\r\n        fr.onload = () => { resolve(fr.result); };\r\n        fr.onerror = () => { fr.abort(); reject(new DOMException('FileReader error.')); };\r\n        switch(type) {\r\n            case 'text': fr.readAsText(file); break;\r\n            case 'arrayBuffer': fr.readAsArrayBuffer(file); break;\r\n            case 'dataURL': fr.readAsDataURL(file); break;\r\n            default: console.error('unknown decode type', type);\r\n        }\r\n    });\r\n}\r\n\r\n/** @module FilesSource */\r\nclass FilesSource {\r\n  /** create a source with a read function that decodes a file from an array of files\r\n   * @constructor\r\n   * @param {string} options.path - path function that extracts the file name (default: basename)\r\n   * @param {function} options.decode - function that decodes a File|Blob to the query type (default uses FileReader)\r\n   * @return {function} - the fetching function (url => decoded).\r\n   */\r\n    constructor(files, options = {}) {\r\n        this.path = options.path || (url => url.substr(url.lastIndexOf('/') + 1));\r\n        this.files = {};\r\n        for (let i = 0; i < files.length; ++i)\r\n            this.files[files[i].name] = files[i];\r\n        this.decode = options.decode || decode;\r\n    }\r\n\r\n    open(url, type) {\r\n        url = this.path(url);\r\n        const file = this.files[url];\r\n        return file ? this.decode(file, type) : Promise.reject(new Error(`file not found: ${url}`));\r\n    }\r\n\r\n    close(url, type) {}\r\n}\r\n\r\nexport default FilesSource;\r\n","const fetch = window.fetch.bind(window);\r\nconst URL = window.URL || window.webkitURL;\r\n\r\nfunction decode(response, type) {\r\n    if (!response.ok) {\r\n        const error = new Error(`Error loading ${response.url}: status ${response.status}`);\r\n        error.response = response;\r\n        throw error;\r\n    }\r\n    switch(type) {\r\n        case 'text': return response.text();\r\n        case 'arrayBuffer': return response.arrayBuffer();\r\n        case 'dataURL': return response.blob().then(URL.createObjectURL);\r\n        default: console.error('unknown decode type', type);\r\n    }\r\n}\r\n\r\n/** @module FetchSource */\r\nclass FetchSource {\r\n  /** create a source with a read function that fetches and decodes a file\r\n   * @constructor\r\n   * @param {Object} options.fetchOptions - fetching options (see standard js fetch function)\r\n   * @param {string} options.path - path prefix for relative intrinsic files (default: '')\r\n   * @param {function} options.fetch - function (url, fetchOptions) to fetch relative intrinsic files (default: fetch)\r\n   * @param {function} options.decode - function that decodes a response from fetch to a string (default function decodes the result of a standard fetch)\r\n   * @return {function} - the fetching function (url => decoded).\r\n   */\r\n    constructor(path, options = {}) {\r\n        this.path = path || '';\r\n        this.fetchOptions = options.fetchOptions || { crossOrigin: 'anonymous' };\r\n        this.fetch = options.fetch || fetch;\r\n        this.decode = options.decode || decode;\r\n    }\r\n\r\n    open(url, type) {\r\n        if(!url.startsWith('http')) url = this.path + url; // todo: better handling of absolute and relative urls\r\n        return this.fetch(url, this.fetchOptions)\r\n            .then(response => this.decode(response, type));\r\n    }\r\n\r\n    close(url, type) {\r\n        if (type === 'dataURL') URL.revokeObjectURL(url);\r\n    }\r\n}\r\n\r\nexport default FetchSource;\r\n","import { Uniform, Matrix4 } from 'three';\r\n\r\nfunction pop(options, property, defaultValue) {\r\n    if (options[property] === undefined) return defaultValue;\r\n    const value = options[property];\r\n    delete options[property];\r\n    return value;\r\n}\r\n\r\nfunction definePropertyUniform(object, property, defaultValue) {\r\n    object.uniforms[property] = new Uniform(object[property] || defaultValue);\r\n    Object.defineProperty(object, property, {\r\n        get: () => object.uniforms[property].value,\r\n        set: (value) => {\r\n            if (object.uniforms[property].value != value) {\r\n                object.uniformsNeedUpdate = true;\r\n                object.uniforms[property].value = value;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// maps [-1,1]^3 to [0,1]^3\r\nconst textureMatrix = new Matrix4().set(\r\n    1, 0, 0, 1,\r\n    0, 1, 0, 1,\r\n    0, 0, 1, 1,\r\n    0, 0, 0, 2);\r\n\r\nexport { pop, definePropertyUniform, textureMatrix };\r\n","import { Uniform, ShaderMaterial, Matrix4, Vector2, Vector3, Vector4, Color } from 'three';\r\nimport { pop, definePropertyUniform, textureMatrix } from './Material.js';\r\nimport OrientedImageMaterialVS from './shaders/OrientedImageMaterialVS.glsl';\r\nimport OrientedImageMaterialFS from './shaders/OrientedImageMaterialFS.glsl';\r\n\r\nclass OrientedImageMaterial extends ShaderMaterial {\r\n    constructor(options = {}) {\r\n        const size = pop(options, 'size', 1);\r\n        const diffuse = pop(options, 'diffuse', new Color(0xeeeeee));\r\n        const uvwPosition = pop(options, 'uvwPosition', new Vector3());\r\n        const uvwPreTransform = pop(options, 'uvwPreTransform', new Matrix4());\r\n        const uvwPostTransform = pop(options, 'uvwPostTransform', new Matrix4());\r\n        const uvDistortion = pop(options, 'uvDistortion', {R: new Vector4(), C: new Vector2()});\r\n        const map = pop(options, 'map', null);\r\n        const alphaMap = pop(options, 'alphaMap', null);\r\n        const scale = pop(options, 'scale', 1);\r\n        const borderSharpness = pop(options, 'borderSharpness', 10000);\r\n        const diffuseColorGrey = pop(options, 'diffuseColorGrey', true);\r\n        const debugOpacity = pop(options, 'debugOpacity', 0);\r\n        options.vertexShader = options.vertexShader || OrientedImageMaterialVS;\r\n        options.fragmentShader = options.fragmentShader || OrientedImageMaterialFS;\r\n        options.defines = options.defines || {};\r\n\r\n        if (map) {\r\n            options.defines.USE_MAP4 = '';\r\n        }\r\n        if (alphaMap) options.defines.USE_ALPHAMAP = '';\r\n        if (options.vertexColors) options.defines.USE_COLOR = '';\r\n        if (options.logarithmicDepthBuffer) options.defines.USE_LOGDEPTHBUF = '';\r\n        if (pop(options, 'sizeAttenuation')) options.defines.USE_SIZEATTENUATION = '';\r\n        super(options);\r\n        definePropertyUniform(this, 'size', size);\r\n        definePropertyUniform(this, 'diffuse', diffuse);\r\n        definePropertyUniform(this, 'uvwPosition', uvwPosition);\r\n        definePropertyUniform(this, 'uvwPreTransform', uvwPreTransform);\r\n        definePropertyUniform(this, 'uvwPostTransform', uvwPostTransform);\r\n        definePropertyUniform(this, 'uvDistortion', uvDistortion);\r\n        definePropertyUniform(this, 'opacity', this.opacity);\r\n        definePropertyUniform(this, 'map', map);\r\n        definePropertyUniform(this, 'alphaMap', alphaMap);\r\n        definePropertyUniform(this, 'scale', scale);\r\n        definePropertyUniform(this, 'borderSharpness', borderSharpness);\r\n        definePropertyUniform(this, 'diffuseColorGrey', diffuseColorGrey);\r\n        definePropertyUniform(this, 'debugOpacity', debugOpacity);\r\n    }\r\n\r\n    setCamera(camera) {\r\n        camera.getWorldPosition(this.uvwPosition);\r\n        this.uvwPreTransform.copy(camera.matrixWorldInverse);\r\n        this.uvwPreTransform.setPosition(0, 0, 0);\r\n        this.uvwPreTransform.premultiply(camera.preProjectionMatrix);\r\n        this.uvwPostTransform.copy(camera.postProjectionMatrix);\r\n        this.uvwPostTransform.premultiply(textureMatrix);\r\n\r\n        // TODO: handle other distorsion types and arrays of distortions\r\n        if (camera.distos && camera.distos.length == 1 && camera.distos[0].isRadialDistortion) {\r\n            this.uvDistortion = camera.distos[0];\r\n        } else {\r\n            this.uvDistortion = { C: new THREE.Vector2(), R: new THREE.Vector4() };\r\n            this.uvDistortion.R.w = Infinity;\r\n        }\r\n    }\r\n}\r\n\r\nexport default OrientedImageMaterial;\r\n","import { ShaderMaterial, Matrix4, Vector3, Vector4 } from 'three';\r\nimport { pop, definePropertyUniform, textureMatrix } from './Material.js';\r\nimport NewMaterialVS from './shaders/NewMaterialVS.glsl';\r\nimport NewMaterialFS from './shaders/NewMaterialFS.glsl';\r\n\r\nclass NewMaterial extends ShaderMaterial {\r\n  constructor(options = {}) {\r\n    const size = pop(options, 'size', 1);\r\n    const textureCameraPosition = pop(options, 'textureCameraPosition', new Vector3());\r\n    const textureCameraPreTransform = pop(options, 'textureCameraPreTransform', new Matrix4());\r\n    const textureCameraPostTransform = pop(options, 'uvwPostTransform', new Matrix4());\r\n    const uvDistortion = pop(options, 'uvDistortion', {R: new Vector4(), C: new Vector3()});\r\n    const map = pop(options, 'map', null);\r\n    const depthMap = pop(options, 'depthMap', null);\r\n    const diffuseColorGrey = pop(options, 'diffuseColorGrey', true);\r\n\r\n    options.defines = options.defines || {};\r\n    options.defines.USE_COLOR = '';\r\n    if (map) {\r\n        options.defines.USE_PROJECTIVE_TEXTURING = '';\r\n        options.defines.EPSILON = 1e-3;\r\n    }\r\n\r\n    super(options);\r\n\r\n    definePropertyUniform(this, 'size', size);\r\n    definePropertyUniform(this, 'textureCameraPosition', textureCameraPosition);\r\n    definePropertyUniform(this, 'textureCameraPreTransform', textureCameraPreTransform);\r\n    definePropertyUniform(this, 'textureCameraPostTransform', textureCameraPostTransform);\r\n    definePropertyUniform(this, 'uvDistortion', uvDistortion);\r\n    definePropertyUniform(this, 'map', map);\r\n    definePropertyUniform(this, 'depthMap', depthMap);\r\n    definePropertyUniform(this, 'diffuseColorGrey', diffuseColorGrey);\r\n\r\n    this.vertexShader = NewMaterialVS;\r\n    this.fragmentShader = NewMaterialFS;\r\n  }\r\n\r\n  setCamera(camera) {\r\n      camera.getWorldPosition(this.textureCameraPosition);\r\n      this.textureCameraPreTransform.copy(camera.matrixWorldInverse);\r\n      this.textureCameraPreTransform.setPosition(0, 0, 0);\r\n      this.textureCameraPreTransform.premultiply(camera.preProjectionMatrix);\r\n      this.textureCameraPostTransform.copy(camera.postProjectionMatrix);\r\n      this.textureCameraPostTransform.premultiply(textureMatrix);\r\n\r\n      if (camera.distos && camera.distos.length == 1 && camera.distos[0].isRadialDistortion) {\r\n          this.uvDistortion = camera.distos[0];\r\n      } else {\r\n          this.uvDistortion = { C: new THREE.Vector2(), R: new THREE.Vector4() };\r\n          this.uvDistortion.R.w = Infinity;\r\n      }\r\n  }\r\n}\r\n\r\nexport default NewMaterial;\r\n","import { Uniform, ShaderMaterial, Matrix4, Vector3, Vector4 } from 'three';\r\nimport ShadowMapMaterialVS from './shaders/ShadowMapMaterialVS.glsl';\r\nimport ShadowMapMaterialFS from './shaders/ShadowMapMaterialFS.glsl';\r\n\r\nclass ShadowMapMaterial extends ShaderMaterial {\r\n  constructor() {\r\n    super();\r\n    this.vertexShader = ShadowMapMaterialVS;\r\n    this.fragmentShader = ShadowMapMaterialFS;\r\n    this.uniforms.size = new Uniform(3);\r\n  }\r\n}\r\n\r\nexport default ShadowMapMaterial;\r\n","import { Uniform, ShaderMaterial, Vector2, Vector3, Vector4, Matrix3, Matrix4 } from 'three';\r\nimport { definePropertyUniform, textureMatrix } from './Material.js';\r\nimport SpriteMaterialVS from './shaders/SpriteMaterialVS.glsl';\r\nimport SpriteMaterialFS from './shaders/SpriteMaterialFS.glsl';\r\n\r\n\r\n// M^(-1) * screen -> this.viewProjectionScreenInverse\r\n// C -> uniform vec3 cameraPosition\r\n// M' -> this.textureCameraPostTransform * this.textureCameraPreTransform\r\n// C' -> this.textureCameraPosition\r\n// P -> attribute vec3 position;\r\n\r\nclass SpriteMaterial extends ShaderMaterial {\r\n  constructor() {\r\n    super();\r\n\r\n    this.uniforms.screenSize = new Uniform(new Vector2());\r\n    definePropertyUniform(this, 'size', 3);\r\n    definePropertyUniform(this, 'textureCameraPosition', new Vector3());\r\n    definePropertyUniform(this, 'textureCameraPreTransform', new Matrix4());\r\n    definePropertyUniform(this, 'textureCameraPostTransform', new Matrix4());\r\n    definePropertyUniform(this, 'viewProjectionScreenInverse', new Matrix3());\r\n    definePropertyUniform(this, 'M_prime_Pre', new Matrix3());\r\n    definePropertyUniform(this, 'M_prime_Post', new Matrix3());\r\n    definePropertyUniform(this, 'E_prime', new Vector3());\r\n    definePropertyUniform(this, 'uvDistortion', {R: new Vector4(), C: new Vector3()});\r\n    definePropertyUniform(this, 'map', null);\r\n    definePropertyUniform(this, 'depthMap', null);\r\n    definePropertyUniform(this, 'screenSize', new Vector2());\r\n    definePropertyUniform(this, 'diffuseColorGrey', true);\r\n\r\n    this.defines.USE_COLOR = '';\r\n    this.defines.EPSILON = 1e-3;\r\n\r\n    this.vertexShader = SpriteMaterialVS;\r\n\r\n    this.fragmentShader = SpriteMaterialFS;\r\n  }\r\n\r\n  setCamera(camera) {\r\n      camera.getWorldPosition(this.textureCameraPosition);\r\n      this.textureCameraPreTransform.copy(camera.matrixWorldInverse);\r\n      this.textureCameraPreTransform.setPosition(0, 0, 0);\r\n      this.textureCameraPreTransform.premultiply(camera.preProjectionMatrix);\r\n      this.textureCameraPostTransform.copy(camera.postProjectionMatrix);\r\n      this.textureCameraPostTransform.premultiply(textureMatrix);\r\n\r\n      var elsPre = this.textureCameraPreTransform.elements;\r\n      this.M_prime_Pre.set(\r\n        elsPre[0], elsPre[4], elsPre[8],\r\n        elsPre[1], elsPre[5], elsPre[9],\r\n        elsPre[3], elsPre[7], elsPre[11]);\r\n\r\n      var elsPost = this.textureCameraPostTransform.elements;\r\n      this.M_prime_Post.set(\r\n        elsPost[0], elsPost[4], elsPost[12],\r\n        elsPost[1], elsPost[5], elsPost[13],\r\n        elsPost[3], elsPost[7], elsPost[15]);\r\n\r\n      if (camera.distos && camera.distos.length == 1 && camera.distos[0].isRadialDistortion) {\r\n          this.uvDistortion = camera.distos[0];\r\n      } else {\r\n          this.uvDistortion = { C: new THREE.Vector2(), R: new THREE.Vector4() };\r\n          this.uvDistortion.R.w = Infinity;\r\n      }\r\n  }\r\n\r\n  setViewCamera(camera) {\r\n    camera.updateMatrixWorld(); // the matrixWorldInverse should be up to date\r\n    this.E_prime.subVectors(camera.position, this.textureCameraPosition).applyMatrix3(this.M_prime_Pre);\r\n\r\n    var viewProjectionTransformMat4 = new Matrix4();\r\n    viewProjectionTransformMat4.copy(camera.matrixWorldInverse);\r\n    viewProjectionTransformMat4.setPosition(0, 0, 0);\r\n    viewProjectionTransformMat4.premultiply(camera.preProjectionMatrix);\r\n    viewProjectionTransformMat4.premultiply(camera.postProjectionMatrix);\r\n\r\n    var els = viewProjectionTransformMat4.elements;\r\n\r\n    this.viewProjectionScreenInverse.set(\r\n      els[0], els[4], els[8],\r\n      els[1], els[5], els[9],\r\n      els[3], els[7], els[11]).invert();\r\n\r\n    const screenInverse = new Matrix3().set(\r\n      2/this.uniforms.screenSize.value.x, 0, -1,\r\n      0, 2/this.uniforms.screenSize.value.y, -1,\r\n      0, 0, 1\r\n    );\r\n\r\n    this.viewProjectionScreenInverse.multiply(screenInverse);\r\n  }\r\n\r\n   setScreenSize(width, height) {\r\n     this.uniforms.screenSize.value.set(width, height);\r\n   }\r\n}\r\n\r\nexport default SpriteMaterial;\r\n","import { Vector2, ShaderChunk } from 'three';\r\nimport Radial_glsl from './Radial.glsl';\r\n/**\r\n * Radial Shader\r\n */\r\n\r\n ShaderChunk[\"postprocessing/radial\"] = Radial_glsl;\r\n\r\nconst RadialShader = {\r\n\r\n  uniforms: {\r\n      'tDiffuse': { value: null },\r\n      'center': { value: new Vector2(0.5,0.5) },\r\n      'resolution': { value: new Vector2(1,1) },\r\n      'pad': { value: 2 }\r\n  },\r\n\r\n  fragmentShader: /* glsl */`#version 300 es\r\nprecision highp float;\r\nprecision highp int;\r\n\r\n#include <postprocessing/radial>\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform vec2 center;\r\nuniform vec2 resolution;\r\nuniform float pad;\r\n\r\nin vec2 vUv;\r\nout highp vec4 pc_fragColor;\r\n\r\nvoid main() {\r\n  vec2 uv = vUv;\r\n  fromRadial(center, resolution, pad, uv);\r\n  // discardOut(uv);\r\n  pc_fragColor = texture(tDiffuse, uv);\r\n  pc_fragColor.rgb -= 0.5;\r\n}`\r\n\r\n};\r\n\r\n\r\n\r\nexport { RadialShader };\r\n","import { Vector2 } from 'three';\r\n/**\r\n * Radial Blur Shader\r\n */\r\n\r\nconst RadialBlurShader = {\r\n  uniforms: {\r\n    'tDiffuse': { value: null },\r\n    'center': { value: new Vector2(0.5,0.5) },\r\n    'resolution': { value: new Vector2(1,1) },\r\n    'blur': { value: 0 },\r\n    'pad': { value: 2 }\r\n  },\r\n\r\n  fragmentShader: /* glsl */`#version 300 es\r\nprecision highp float;\r\nprecision highp int;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform vec2 center;\r\nuniform vec2 resolution;\r\nuniform float blur;\r\nuniform float pad;\r\n\r\nin vec2 vUv;\r\nout highp vec4 pc_FragColor;\r\n\r\n#include <postprocessing/radial>\r\n\r\nvoid main() {\r\n  float t = max(0.01, blur*0.01);\r\n  vec2 p0 = mix(vUv,center,-t);\r\n  vec2 p1 = mix(vUv,center, t);\r\n  toRadial(center, resolution, pad, p0);\r\n  toRadial(center, resolution, pad, p1);\r\n  vec2 ddx = dFdx( vUv );\r\n  vec2 ddy = dFdy( vUv );\r\n  vec4 c0 = textureGrad(tDiffuse, p0, ddx, ddy);\r\n  vec4 c1 = textureGrad(tDiffuse, p1, ddx, ddy);\r\n  pc_FragColor = c1-c0;\r\n  pc_FragColor /= pc_FragColor.a;\r\n  pc_FragColor += 0.5;\r\n}`\r\n\r\n};\r\n\r\nexport { RadialBlurShader };\r\n","import { Vector2 } from 'three';\r\n\r\n/**\r\n * Sum Shader\r\n */\r\n\r\nconst SumShader = {\r\n  uniforms: {\r\n      'tDiffuse': { value: null },\r\n      'center': { value: new Vector2(0.5,0.5) },\r\n      'resolution': { value: new Vector2(1,1) },\r\n      'stride': { value: 1 },\r\n      'amount': { value: 1000000 }\r\n  },\r\n\r\n  fragmentShader: /* glsl */`#version 300 es\r\nprecision highp float;\r\nprecision highp int;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform vec2 resolution;\r\nuniform float amount;\r\nuniform float stride;\r\n\r\nin vec2 vUv;\r\nout highp vec4 pc_fragColor;\r\n\r\nvoid main() {\r\n  vec3 step = vUv.y>0.5 ?\r\n  vec3(1./resolution.x,0.,vUv.x*resolution.x) :\r\n  vec3(0.,0.5/resolution.y,vUv.y*2.*resolution.y) ;\r\n  step.xy *= stride;\r\n  vec4 c0 = vec4(0.);\r\n  float imax = min(amount,step.z/stride);\r\n  for(float i=0.; i<imax; ++i)\r\n    c0 += textureGrad(tDiffuse, vUv - i * step.xy, vec2(0.), vec2(0.));\r\n  pc_fragColor = c0;\r\n\r\n}`\r\n\r\n};\r\n\r\nexport { SumShader };\r\n","import {\r\n\tRawShaderMaterial,\r\n\tUniformsUtils\r\n} from 'three';\r\nimport { Pass, FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\r\nimport RawShaderPassVS from './RawShaderPassVS.glsl';\r\n\r\nclass RawShaderPass extends Pass {\r\n\r\n\tconstructor( shader, textureID ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : 'tDiffuse';\r\n\r\n\t\tif ( shader instanceof RawShaderMaterial ) {\r\n\r\n\t\t\tthis.uniforms = shader.uniforms;\r\n\r\n\t\t\tthis.material = shader;\r\n\r\n\t\t} else if ( shader ) {\r\n\r\n\t\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\t\tthis.material = new RawShaderMaterial( {\r\n\r\n\t\t\t\tdefines: Object.assign( {}, shader.defines ),\r\n\t\t\t\tuniforms: this.uniforms,\r\n\t\t\t\tvertexShader: shader.vertexShader || RawShaderPassVS,\r\n\t\t\t\tfragmentShader: shader.fragmentShader\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tif ( this.uniforms[ this.textureID ] ) {\r\n\r\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\r\n\r\n\t\t}\r\n\r\n\t\tthis.fsQuad.material = this.material;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { RawShaderPass };\r\n"],"sourceRoot":""}